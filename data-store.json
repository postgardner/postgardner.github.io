[["Map",1,2,9,10,41,42,63,64,211,212,344,345,540,541,797,798,918,919,1014,1015,1064,1065,1208,1209,1411,1412],"meta::meta",["Map",3,4,5,6,7,8],"astro-version","5.7.4","content-config-digest","b86b0c6099d37973","astro-config-digest","{\"root\":{},\"srcDir\":{},\"publicDir\":{},\"outDir\":{},\"cacheDir\":{},\"site\":\"https://eventcatalog.dev/\",\"compressHTML\":true,\"base\":\"/\",\"trailingSlash\":\"ignore\",\"output\":\"static\",\"scopedStyleStrategy\":\"attribute\",\"build\":{\"format\":\"directory\",\"client\":{},\"server\":{},\"assets\":\"_astro\",\"serverEntry\":\"entry.mjs\",\"redirects\":true,\"inlineStylesheets\":\"auto\",\"concurrency\":1},\"server\":{\"open\":false,\"host\":false,\"port\":3000,\"streaming\":true,\"allowedHosts\":[]},\"redirects\":{},\"image\":{\"endpoint\":{\"route\":\"/_image\"},\"service\":{\"entrypoint\":\"astro/assets/services/sharp\",\"config\":{}},\"domains\":[],\"remotePatterns\":[]},\"devToolbar\":{\"enabled\":false},\"markdown\":{\"syntaxHighlight\":false,\"shikiConfig\":{\"langs\":[],\"langAlias\":{},\"theme\":\"github-dark\",\"themes\":{},\"wrap\":false,\"transformers\":[]},\"remarkPlugins\":[],\"rehypePlugins\":[[null,{\"themes\":[\"github-light\"],\"defaultProps\":{\"wrap\":true}}]],\"remarkRehype\":{},\"gfm\":true,\"smartypants\":true},\"security\":{\"checkOrigin\":true},\"env\":{\"schema\":{},\"validateSecrets\":false},\"experimental\":{\"clientPrerender\":false,\"contentIntellisense\":true,\"responsiveImages\":false,\"headingIdCompat\":false,\"preserveScriptOrder\":false},\"legacy\":{\"collections\":false}}","users",["Map",11,12,21,22,30,31],"msmith",{"id":11,"data":13,"body":17,"filePath":18,"digest":19,"deferredRender":20},{"id":11,"name":14,"avatarUrl":15,"role":16},"Martin Smith","https://randomuser.me/api/portraits/men/51.jpg","Senior software engineer","As a Senior Mobile Developer on The Mobile Devs team, I play a key role in designing, developing, and maintaining our company’s mobile applications. My focus is on creating a seamless and intuitive user experience for our customers on both iOS and Android platforms. I work closely with cross-functional teams, including backend developers, UX/UI designers, and product managers, to deliver high-quality mobile solutions that meet business objectives and exceed user expectations.","../users/mSmith.mdx","022ea06fa0ebccf2",true,"asmith",{"id":21,"data":23,"body":27,"filePath":28,"digest":29,"deferredRender":20},{"id":21,"name":24,"avatarUrl":25,"role":26},"Amy Smith","https://randomuser.me/api/portraits/women/48.jpg","Product owner","Hello! I'm Amy Smith, the Product Owner of the innovative Full Stackers team. With a strong focus on delivering exceptional value, I specialize in connecting business objectives with technical solutions to create products that users love.\n\n### About Me\n\nWith a comprehensive background in product management and a solid understanding of software development, I bring a unique perspective to the table. My career has been driven by a passion for understanding user needs, defining clear product visions, and leading teams to successful product deliveries.\n\n### What I Do\n\nAs the Product Owner for Full Stackers, my role involves a wide range of responsibilities aimed at ensuring our products are both high-quality and user-centric. Key aspects of my role include:\n\n- **Product Vision & Strategy**: Defining and communicating the long-term vision and strategy for our products, ensuring alignment with the company's objectives and market demands.\n- **Roadmap Planning**: Developing and maintaining a product roadmap that highlights key features and milestones, prioritizing tasks based on their business value and user feedback.\n- **Stakeholder Management**: Engaging with stakeholders across the organization to gather requirements, provide updates, and ensure everyone is aligned on the product's direction.\n- **User-Centric Design**: Championing the end-users by conducting user research, analyzing feedback, and ensuring our products effectively solve their problems.\n- **Agile Leadership**: Leading the development process using Agile methodologies, facilitating sprint planning, and ensuring the team has clear priorities and objectives.\n\nMy mission is to deliver products that not only meet but exceed customer expectations. I thrive on the challenge of translating complex requirements into simple, intuitive solutions.\n\nIf you’re interested in product management, user experience, or discussing the latest trends in technology, feel free to reach out!","../users/aSmith.mdx","4b4649610e7798d3","dboyne",{"id":30,"data":32,"body":38,"filePath":39,"digest":40,"deferredRender":20},{"id":30,"name":33,"avatarUrl":34,"role":35,"email":36,"slackDirectMessageUrl":37},"David Boyne","https://pbs.twimg.com/profile_images/1262283153563140096/DYRDqKg6_400x400.png","Lead developer","test@test.com","https://yourteam.slack.com/channels/boyney123","Hello! I'm David Boyne, the Tech Lead of an amazing team called Full Stackers. With a passion for building robust and scalable systems, I specialize in designing and implementing event-driven architectures that power modern, responsive applications.\n\n### About Me\n\nWith over a decade of experience in the tech industry, I have honed my skills in full-stack development, cloud computing, and distributed systems. My journey has taken me through various roles, from software engineer to architect, and now as a tech lead, I am committed to driving innovation and excellence within my team.\n\n### What I Do\n\nAt Full Stackers, we focus on creating seamless and efficient event-driven architectures that enhance the performance and scalability of our applications. My role involves:\n\n- **Architecture Design**: Crafting scalable and resilient system architectures using event-driven paradigms.\n- **Team Leadership**: Guiding a talented team of developers, fostering a collaborative and innovative environment.\n- **Code Reviews & Mentorship**: Ensuring code quality and sharing knowledge to help the team grow.\n- **Stakeholder Collaboration**: Working closely with other teams and stakeholders to align our technical solutions with business goals.\n- **Continuous Improvement**: Advocating for best practices in software development, deployment, and monitoring.\n\nI am passionate about leveraging the power of events to build systems that are not only highly responsive but also easier to maintain and extend. In an ever-evolving tech landscape, I strive to stay ahead of the curve, continuously learning and adapting to new technologies and methodologies.\n\nFeel free to connect with me to discuss all things tech, event-driven architectures, or to exchange ideas on building better software systems!\n\n---\n*David Boyne*\n*Tech Lead, Full Stackers*","../users/dboyne.mdx","7b87641ac76bf952","teams",["Map",43,44,54,55],"full-stack",{"id":43,"data":45,"body":51,"filePath":52,"digest":53,"deferredRender":20},{"id":43,"name":46,"email":36,"slackDirectMessageUrl":37,"members":47},"Full stackers",[48,49,50],{"id":30,"collection":9},{"id":21,"collection":9},{"id":11,"collection":9},"## Overview\n\nThe Full Stack Team is responsible for developing and maintaining both the front-end and back-end components of our applications. This team ensures that the user interfaces are intuitive and responsive, and that the server-side logic and database interactions are efficient and secure. The Full Stack Team handles the entire lifecycle of web applications, from initial development to deployment and ongoing maintenance.\n\n## Responsibilities\n\n### Key Responsibilities\n- **Front-End Development**: Design and implement user interfaces using modern web technologies (e.g., HTML, CSS, JavaScript, React).\n- **Back-End Development**: Develop and maintain server-side logic, APIs, and database interactions (e.g., Node.js, Express, SQL/NoSQL databases).\n- **Integration**: Ensure seamless communication between the front-end and back-end components.\n- **Performance Optimization**: Optimize the performance and scalability of web applications.\n- **Testing and Debugging**: Write and maintain unit, integration, and end-to-end tests to ensure the quality and reliability of the applications.\n- **Deployment**: Manage the deployment of applications to production environments using CI/CD pipelines.","../teams/full-stack.mdx","b27ed14e59193fe8","mobile-devs",{"id":54,"data":56,"body":60,"filePath":61,"digest":62,"deferredRender":20},{"id":54,"name":57,"members":58},"The mobile devs",[59],{"id":30,"collection":9},"The Mobile Devs team is responsible for the development and maintenance of the mobile applications for our company. This includes the iOS and Android apps that customers use to interact with our services, make purchases, and manage their accounts. The team ensures that the mobile apps are user-friendly, secure, and performant.\n\n## Responsibilities\n\n### 1. Mobile Application Development\n- **Platform Support**: Developing and maintaining apps for iOS and Android platforms.\n- **Feature Implementation**: Implementing new features based on product requirements and user feedback.\n- **User Interface Design**: Ensuring a consistent and intuitive user interface across all mobile platforms.\n- **Performance Optimization**: Optimizing the performance of mobile apps to ensure fast and smooth user experiences.\n\n### 2. Integration with Backend Services\n- **API Integration**: Integrating mobile apps with backend services using RESTful APIs and other communication protocols.\n- **Real-time Updates**: Implementing real-time data updates and synchronization with backend services.","../teams/mobile-devs.mdx","53305384a2c5cd03","ubiquitousLanguages",["Map",65,66,108,109,159,160],"f58e5516-adbd-4133-a378-989cdc94a60e",{"id":65,"data":67,"filePath":106,"digest":107,"deferredRender":20},{"dictionary":68},[69,73,77,82,86,91,96,101],{"id":70,"name":70,"summary":71,"icon":72},"Transaction","The process of transferring funds from one party to another.","CreditCard",{"id":74,"name":74,"summary":75,"description":76,"icon":72},"Invoice","A document issued by a seller to a buyer, listing goods or services provided and the amount due.","Invoices are critical for financial transactions, serving as a request for payment from the buyer. They include:\n\n- Invoice number for tracking\n- List of products or services provided\n- Total amount due and payment terms\n- Seller and buyer contact information\n- Due date for payment\n\nInvoices are essential for accounting, tax purposes, and maintaining cash flow.\n",{"id":78,"name":78,"summary":79,"description":80,"icon":81},"Payment Method","The means by which a payment is made, such as credit card or bank transfer.","Payment methods are the various ways customers can pay for goods or services. Common methods include:\n\n- Credit and debit cards\n- Bank transfers\n- Digital wallets\n- Cash on delivery\n\nOffering multiple payment methods can enhance customer satisfaction and increase sales.\n","Wallet",{"id":83,"name":83,"summary":84,"description":85,"icon":83},"Receipt","A document acknowledging that a payment has been made.","Receipts serve as proof of payment and are important for record-keeping. They typically include:\n\n- Receipt number\n- Date and time of payment\n- Amount paid\n- Payment method used\n- Details of the transaction\n\nReceipts are essential for both customers and businesses to track financial transactions.\n",{"id":87,"name":87,"summary":88,"description":89,"icon":90},"Refund","The process of returning funds to a customer for a returned product or service.","Refunds are issued when a customer returns a product or cancels a service. The process involves:\n\n- Verifying the return or cancellation\n- Processing the refund through the original payment method\n- Updating financial records\n\nEfficient refund processes can improve customer satisfaction and loyalty.\n","RotateCcw",{"id":92,"name":92,"summary":93,"description":94,"icon":95},"Currency","The system of money in general use in a particular country.","Currency is the medium of exchange for goods and services. Key aspects include:\n\n- Currency code (e.g., USD, EUR)\n- Exchange rates\n- Currency symbols\n\nUnderstanding currency is crucial for international transactions and financial reporting.\n","DollarSign",{"id":97,"name":97,"summary":98,"description":99,"icon":100},"Payment Gateway","A service that authorizes and processes payments for online and offline transactions.","Payment gateways facilitate the transfer of payment information between the customer and the merchant. They ensure secure and efficient transactions by:\n\n- Encrypting sensitive data\n- Authorizing payments\n- Providing transaction reports\n\nChoosing a reliable payment gateway is essential for business operations.\n","Server",{"id":102,"name":102,"summary":103,"description":104,"icon":105},"Chargeback","A demand by a credit card provider for a retailer to make good the loss on a fraudulent or disputed transaction.","Chargebacks occur when a customer disputes a transaction, and the funds are returned to their account. The process involves:\n\n- Investigating the dispute\n- Providing evidence to the payment processor\n- Resolving the issue with the customer\n\nManaging chargebacks effectively can prevent financial losses and maintain customer trust.\n","AlertCircle","../domains/Payment/ubiquitous-language.mdx","d3dccac3121dbf8c","16aaee36-407f-4f10-89c6-786bf53551cd",{"id":108,"data":110,"filePath":157,"digest":158,"deferredRender":20},{"dictionary":111},[112,117,122,127,132,137,142,147,152],{"id":113,"name":113,"summary":114,"description":115,"icon":116},"Subscription","A recurring agreement where a customer pays for access to a product or service at regular intervals.","A subscription represents an ongoing relationship between customer and provider. Key aspects include:\n\n- Subscription plan details\n- Billing frequency\n- Access rights and limitations\n- Start and end dates\n- Auto-renewal settings\n\nSubscriptions provide predictable revenue for businesses and convenient access for customers.\n","Repeat",{"id":118,"name":118,"summary":119,"description":120,"icon":121},"Billing Cycle","The recurring period for which a subscription is billed.","Billing cycles define when payments are collected and services are provided. They include:\n\n- Cycle duration (monthly, annually, etc.)\n- Billing date\n- Payment due dates\n- Pro-ration rules\n- Grace periods\n\nClear billing cycles help manage customer expectations and cash flow.\n","Calendar",{"id":123,"name":123,"summary":124,"description":125,"icon":126},"Plan","A specific subscription offering with defined features, pricing, and terms.","Subscription plans define the service levels available to customers. They specify:\n\n- Feature sets and limitations\n- Pricing structure\n- Billing frequency options\n- Usage allowances\n- Additional benefits\n\nWell-designed plans cater to different customer segments and needs.\n","Layout",{"id":128,"name":128,"summary":129,"description":130,"icon":131},"Trial Period","A promotional period allowing customers to test a subscription service before committing.","Trial periods help customers evaluate the service risk-free. They include:\n\n- Duration of trial\n- Available features\n- Conversion process\n- Payment information requirements\n- Trial end notifications\n\nEffective trials can increase conversion rates to paid subscriptions.\n","Clock",{"id":133,"name":133,"summary":134,"description":135,"icon":136},"Auto-Renewal","Automatic continuation of a subscription at the end of each billing period.","Auto-renewal ensures service continuity for customers. The process includes:\n\n- Renewal notifications\n- Payment processing\n- Service extension\n- Failed payment handling\n- Cancellation options\n\nAuto-renewal reduces churn and maintains steady revenue streams.\n","RefreshCw",{"id":138,"name":138,"summary":139,"description":140,"icon":141},"Upgrade","The process of moving to a higher-tier subscription plan.","Upgrades allow customers to access more features or capacity. This involves:\n\n- Plan comparison\n- Pro-rated billing adjustments\n- Feature activation\n- Data migration if needed\n- Service level changes\n\nSmooth upgrade processes encourage customer growth.\n","ArrowUpCircle",{"id":143,"name":143,"summary":144,"description":145,"icon":146},"Downgrade","The process of moving to a lower-tier subscription plan.","Downgrades adjust service levels to match customer needs. This includes:\n\n- Feature reduction\n- Billing adjustments\n- Data retention policies\n- Service level changes\n- Customer retention strategies\n\nFlexible downgrade options can prevent complete cancellations.\n","ArrowDownCircle",{"id":148,"name":148,"summary":149,"description":150,"icon":151},"Cancellation","The termination of a subscription service.","Cancellation processes handle the end of subscription relationships. They cover:\n\n- Notice periods\n- Final billing\n- Data retention/export\n- Service access termination\n- Reactivation options\n\nClear cancellation policies protect both customer and provider interests.\n","XCircle",{"id":153,"name":153,"summary":154,"description":155,"icon":156},"Usage Limit","Restrictions on service usage within a subscription plan.","Usage limits define the boundaries of service consumption. They include:\n\n- Quantitative restrictions\n- Monitoring systems\n- Overage handling\n- Alert mechanisms\n- Upgrade triggers\n\nWell-defined limits help manage resources and encourage appropriate plan selection.\n","Gauge","../domains/Subscriptions/ubiquitous-language.mdx","213c9e59ee59d0c8","5b7d6e78-aaaf-45d1-bb8a-b10974d98137",{"id":159,"data":161,"filePath":209,"digest":210,"deferredRender":20},{"dictionary":162},[163,167,172,177,182,187,189,194,199,204],{"id":164,"name":164,"summary":165,"icon":166},"Payment","The act of paying for magical goods or services.","Wand2",{"id":168,"name":168,"summary":169,"description":170,"icon":171},"Purchase Order","A mystical document issued by a buyer to a seller indicating the types, quantities, and agreed prices for enchanted products or services.","A purchase order (PO) is a magical document that initiates the buying process between mystical entities. It protects both buyer and seller by clearly documenting the transaction details. Key components include:\n\n- Unique PO number for tracking\n- Detailed item specifications and quantities\n- Agreed prices and payment terms\n- Delivery requirements and timelines\n- Terms and conditions of the purchase\n\nPOs are essential for budget control, audit trails, and inventory management. They help prevent unauthorized purchases and provide a clear record for accounting and reconciliation purposes.\n","FileText",{"id":173,"name":173,"summary":174,"description":175,"icon":176},"Order Line","An individual enchanted item within a purchase order, representing a specific magical product or service being ordered.","Order lines are the fundamental building blocks of any purchase order. Each line represents a distinct item or service and contains critical information for order fulfillment:\n\n- Product identifier (SKU or part number)\n- Quantity ordered\n- Unit price and total line value\n- Special handling instructions\n- Required delivery date\n\nOrder lines drive warehouse picking operations, shipping processes, and financial calculations. They are essential for tracking partial shipments and managing order modifications.\n","ListOrdered",{"id":178,"name":178,"summary":179,"description":180,"icon":181},"SKU","Sorcery Keeping Unit - A unique identifier for distinct magical products and their variants in inventory.","SKUs are the cornerstone of effective inventory management systems. Each SKU represents a unique combination of product attributes:\n\n- Product variations (size, color, style)\n- Storage location identifiers\n- Supplier information\n- Reorder points and quantities\n\nSKUs enable precise inventory tracking, automated reordering, and detailed sales analytics. They are crucial for maintaining optimal stock levels and preventing stockouts or overstock situations.\n","Tag",{"id":183,"name":183,"summary":184,"description":185,"icon":186},"Consignment","A batch of enchanted goods destined for or delivered to someone.","A consignment represents the physical movement of goods through the supply chain. It encompasses all aspects of the shipping process:\n\n- Packaging and labeling requirements\n- Transportation method and routing\n- Customs documentation for international shipments\n- Tracking and proof of delivery\n\nConsignments may combine multiple orders for efficient shipping and can be tracked as a single unit throughout the delivery process. They are crucial for managing logistics costs and ensuring timely delivery to customers.\n","Package",{"id":74,"name":74,"summary":188,"description":76,"icon":83},"A document issued by a seller to a buyer, listing enchanted goods or services provided and the amount due.",{"id":190,"name":190,"summary":191,"description":192,"icon":193},"Supplier","An entity that provides enchanted goods or services to another organization.","Suppliers are key partners in the supply chain, responsible for delivering the necessary products or services. Key aspects include:\n\n- Supplier identification and contact details\n- Product or service offerings\n- Pricing and payment terms\n- Delivery schedules and reliability\n\nEffective supplier management ensures quality, cost-effectiveness, and timely delivery.\n","Truck",{"id":195,"name":195,"summary":196,"description":197,"icon":198},"Inventory","The complete list of enchanted items held in stock by a business.","Inventory management is crucial for balancing supply and demand. It involves:\n\n- Tracking stock levels and locations\n- Managing reorder points and quantities\n- Conducting regular stock audits\n- Analyzing inventory turnover rates\n\nProper inventory management minimizes costs and maximizes service levels.\n","Warehouse",{"id":200,"name":200,"summary":201,"description":202,"icon":203},"Fulfillment","The process of completing an order and delivering it to the customer.","Fulfillment encompasses all steps from order receipt to delivery, including:\n\n- Order processing and picking\n- Packaging and shipping\n- Delivery tracking and confirmation\n- Handling returns and exchanges\n\nEfficient fulfillment is key to customer satisfaction and operational efficiency.\n","PackageCheck",{"id":205,"name":205,"summary":206,"description":207,"icon":208},"Return","The process of sending back enchanted goods to the seller for a refund or exchange.","Returns management is an important aspect of customer service and inventory control. It involves:\n\n- Processing return requests and authorizations\n- Inspecting returned items for quality\n- Restocking or disposing of returned goods\n- Issuing refunds or exchanges\n\nA streamlined returns process enhances customer loyalty and operational efficiency.\n","PackageX","../domains/Orders/ubiquitous-language.mdx","72af3a0b786fb2b4","domains",["Map",213,214,230,231,266,267,279,280,314,315,330,331],"Payment-0.0.1",{"id":213,"data":215,"body":227,"filePath":228,"digest":229,"deferredRender":20},{"services":216,"id":164,"name":164,"summary":220,"version":219,"badges":221,"owners":225},[217],{"id":218,"version":219},"PaymentService","0.0.1","Domain that contains payment related services and messages.\n",[222],{"content":223,"backgroundColor":224,"textColor":224},"Payment Domain","blue",[226],{"id":30},"## Overview\n\nThe Payment Domain encompasses all services and components related to handling financial transactions within the system. It is responsible for managing payments, transactions, billing, and financial records. The domain ensures secure, reliable, and efficient processing of all payment-related activities\n\n## Bounded context\n\n\u003CNodeGraph />","../domains/Payment/index.mdx","8742918eaf37c0bd","Orders-0.0.3",{"id":230,"data":232,"body":263,"filePath":264,"digest":265,"deferredRender":20},{"services":233,"id":243,"name":243,"version":244,"badges":245,"owners":249,"resourceGroups":252},[234,237,239,241],{"id":235,"version":236},"InventoryService","latest",{"id":238,"version":236},"OrdersService",{"id":240,"version":236},"NotificationService",{"id":242,"version":236},"ShippingService","Orders","0.0.3",[246],{"content":247,"backgroundColor":224,"textColor":224,"icon":248},"Subdomain","RectangleGroupIcon",[250,251],{"id":30},{"id":43},[253],{"id":254,"title":255,"items":256,"limit":262,"sidebar":20},"related-resources","Core resources",[257,259,260,261],{"id":235,"version":236,"type":258},"service",{"id":238,"version":236,"type":258},{"id":240,"version":236,"type":258},{"id":242,"version":236,"type":258},10,"import Footer from '@catalog/components/footer.astro';\n\n\n\n:::warning\n\nPlease ensure all services are **updated** to the latest version for compatibility and performance improvements.\n:::\n\nThe Orders domain handles all operations related to customer orders, from creation to fulfillment. This documentation provides an overview of the events and services involved in the Orders domain, helping developers and stakeholders understand the event-driven architecture\n\n\u003CTiles >\n    \u003CTile icon=\"UserGroupIcon\" href=\"/docs/teams/full-stack\" title=\"Contact the team\" description=\"Any questions? Feel free to contact the owners\" />\n    \u003CTile icon=\"RectangleGroupIcon\" href={`/visualiser/domains/${frontmatter.id}/${frontmatter.version}`} title={`${frontmatter.services.length} services`} description=\"This domain contains the following services.\" />\n\u003C/Tiles>\n\n### Architecture for the Orders domain\n\n\u003CNodeGraph />\n\n\u003CMessageTable format=\"all\" limit={4} showChannels={true} title=\"Messages in/out of the domain\" />\n\n### Order example (sequence diagram)\n\n```mermaid\nsequenceDiagram\n    participant Customer\n    participant OrdersService\n    participant InventoryService\n    participant NotificationService\n\n    Customer->>OrdersService: Place Order\n    OrdersService->>InventoryService: Check Inventory\n    InventoryService-->>OrdersService: Inventory Available\n    OrdersService->>InventoryService: Reserve Inventory\n    OrdersService->>NotificationService: Send Order Confirmation\n    NotificationService-->>Customer: Order Confirmation\n    OrdersService->>Customer: Order Placed Successfully\n    OrdersService->>InventoryService: Update Inventory\n```\n\n## Flows\n\n### Cancel Subscription flow\nDocumented flow when a user cancels their subscription.\n\n\u003CFlow id=\"CancelSubscription\" version=\"latest\" includeKey={false} />\n\n### Payment processing flow\nDocumented flow when a user makes a payment within the order domain\n\n\u003CFlow id=\"PaymentFlow\" version=\"latest\" includeKey={false} />\n\n\u003CResourceGroupTable id=\"related-resources\" limit={4} showOwners={true} title=\"Core resources for the Orders domain\" description=\"Resources that are related to the Orders domain, you may find them useful\" />\n\n\u003CFooter />","../domains/Orders/index.mdx","ce523f0359f1a752","Subscription-0.0.1",{"id":266,"data":268,"body":227,"filePath":277,"digest":278,"deferredRender":20},{"services":269,"id":113,"name":113,"summary":272,"version":219,"badges":273,"owners":275},[270],{"id":271,"version":219},"SubscriptionService","Domain that contains subscription related services and messages.\n",[274],{"content":223,"backgroundColor":224,"textColor":224},[276],{"id":30},"../domains/Subscriptions/index.mdx","92ae43e9d4f6243e","E-Commerce-1.0.0",{"id":279,"data":281,"body":311,"filePath":312,"digest":313,"deferredRender":20},{"domains":282,"id":286,"name":286,"version":287,"badges":288,"owners":295,"resourceGroups":298},[283,284,285],{"id":243,"version":236},{"id":164,"version":236},{"id":113,"version":236},"E-Commerce","1.0.0",[289,291],{"content":290,"backgroundColor":224,"textColor":224,"icon":248},"Core domain",{"content":292,"backgroundColor":293,"textColor":293,"icon":294},"Business Critical","yellow","ShieldCheckIcon",[296,297],{"id":30},{"id":43},[299],{"id":254,"title":300,"items":301,"limit":262,"sidebar":20},"Core FlowMart Services",[302,303,304,305,306,308,309],{"id":235,"version":236,"type":258},{"id":238,"version":236,"type":258},{"id":240,"version":236,"type":258},{"id":242,"version":236,"type":258},{"id":307,"version":236,"type":258},"CustomerService",{"id":218,"version":236,"type":258},{"id":310,"version":236,"type":258},"AnalyticsService","import Footer from '@catalog/components/footer.astro';\n\nThe E-Commerce domain is the core business domain of FlowMart, our modern digital marketplace. This domain orchestrates all critical business operations from product discovery to order fulfillment, handling millions of transactions monthly across our global customer base.\n\n\u003CTiles>\n    \u003CTile \n        icon=\"UserGroupIcon\" \n        href=\"/docs/teams/full-stack\" \n        title=\"Engineering Support\" \n        description=\"Questions? Contact our full-stack team for technical support\" \n    />\n    \u003CTile \n        icon=\"RectangleGroupIcon\" \n        href={`/visualiser/domains/${frontmatter.id}/${frontmatter.version}`} \n        title=\"Domain Architecture\" \n        description=\"Explore our domain structure and service interactions\" \n    />\n\u003C/Tiles>\n\n## Domain Overview\n\nFlowMart's E-Commerce domain is built on event-driven microservices architecture, enabling:\n- Real-time inventory management across multiple warehouses\n- Seamless payment processing with multiple providers\n- Smart order routing and fulfillment\n- Personalized customer notifications\n- Subscription-based shopping experiences\n- Advanced fraud detection and prevention\n\n## Sub domains\n\nThe E-Commerce domain is built on the following sub domains:\n\n- \u003CResourceLink id=\"Orders\" type=\"domain\">Orders\u003C/ResourceLink> - Core domain for order management\n- \u003CResourceLink id=\"Payment\" type=\"domain\">Payment\u003C/ResourceLink> - A generic domain for payment processing using Stripe as a payment provider\n- \u003CResourceLink id=\"Subscription\" type=\"domain\">Subscription\u003C/ResourceLink> - Generic subscription domain handling users subscriptions\n\n## Target Architecture (Event Storming Results)\n\nOur target architecture was defined through collaborative event storming sessions with product, engineering, and business stakeholders. This represents our vision for FlowMart's commerce capabilities.\n\n\u003CMiro boardId=\"uXjVIHCImos=/\" moveToWidget=\"3074457347671667709\" edit={false} />\n\n## Current Production Architecture\n\nOur current event-driven architecture powering FlowMart's shopping experience:\n\n\u003CNodeGraph />\n\n### Order Processing Flow\n\n```mermaid\nsequenceDiagram\n    participant Customer\n    participant OrdersService\n    participant InventoryService\n    participant PaymentService\n    participant NotificationService\n    participant ShippingService\n\n    Customer->>OrdersService: Place Order\n    OrdersService->>InventoryService: Check Stock Availability\n    InventoryService-->>OrdersService: Stock Confirmed\n    OrdersService->>PaymentService: Process Payment\n    PaymentService-->>OrdersService: Payment Successful\n    OrdersService->>InventoryService: Reserve Inventory\n    OrdersService->>ShippingService: Create Shipping Label\n    ShippingService-->>OrdersService: Shipping Label Generated\n    OrdersService->>NotificationService: Send Order Confirmation\n    NotificationService-->>Customer: Order & Tracking Details\n```\n\n## Key Business Flows\n\n### Subscription Management\nOur subscription service powers FlowMart's popular \"Subscribe & Save\" feature:\n\n\u003CFlow id=\"CancelSubscription\" version=\"latest\" includeKey={false} />\n\n### Payment Processing\nSecure, multi-provider payment processing with fraud detection:\n\n\u003CFlow id=\"PaymentFlow\" version=\"latest\" includeKey={false} />\n\n## Core Services\n\nThese services form the backbone of FlowMart's e-commerce operations:\n\n\u003CResourceGroupTable \n    id=\"related-resources\" \n    limit={7} \n    showOwners={true} \n    description=\"Essential services powering our e-commerce platform\" \n/>\n\n## Performance SLAs\n\n- Order Processing: \u003C 2 seconds\n- Payment Processing: \u003C 3 seconds\n- Inventory Updates: Real-time\n- Notification Delivery: \u003C 30 seconds\n\n## Monitoring & Alerts\n\n- Real-time order volume monitoring\n- Payment gateway health checks\n- Inventory level alerts\n- Customer experience metrics\n- System performance dashboards\n\n\u003CFooter />","../domains/E-Commerce/index.mdx","acff4cbfd68e94a8","Orders-0.0.1",{"id":314,"data":316,"body":327,"filePath":328,"digest":329,"deferredRender":20},{"services":317,"id":243,"name":243,"summary":320,"version":219,"badges":321,"owners":324},[318],{"id":235,"version":319},"0.0.2","Domain for everything shopping\n",[322],{"content":323,"backgroundColor":224,"textColor":224},"New domain",[325,326],{"id":30},{"id":43},"## Overview\n\n\u003CNodeGraph />","../domains/Orders/versioned/0.0.1/index.mdx","92e1f9f0299b99f8","Orders-0.0.2",{"id":330,"data":332,"body":341,"filePath":342,"digest":343,"deferredRender":20},{"services":333,"id":243,"name":243,"version":319,"badges":337,"owners":339},[334,335,336],{"id":235,"version":319},{"id":240,"version":319},{"id":238,"version":319},[338],{"content":323,"backgroundColor":224,"textColor":224},[340],{"id":30},"## Overview\n\nThe Orders domain handles all operations related to customer orders, from creation to fulfillment. This documentation provides an overview of the events and services involved in the Orders domain, helping developers and stakeholders understand the event-driven architecture.\n\n\u003CAdmonition type=\"warning\">Please ensure all services are updated to the latest version for compatibility and performance improvements.\u003C/Admonition>\n\n## Bounded context\n\n\u003CNodeGraph />\n\n### Order example (sequence diagram)\n\n```mermaid\nsequenceDiagram\n    participant Customer\n    participant OrdersService\n    participant InventoryService\n    participant NotificationService\n\n    Customer->>OrdersService: Place Order\n    OrdersService->>InventoryService: Check Inventory\n    InventoryService-->>OrdersService: Inventory Available\n    OrdersService->>InventoryService: Reserve Inventory\n    OrdersService->>NotificationService: Send Order Confirmation\n    NotificationService-->>Customer: Order Confirmation\n    OrdersService->>Customer: Order Placed Successfully\n    OrdersService->>InventoryService: Update Inventory\n```","../domains/Orders/versioned/0.0.2/index.mdx","80c69dfc562c90b5","services",["Map",346,347,377,378,411,412,431,432,461,462,483,484,507,508,526,527],"NotificationService-0.0.2",{"id":346,"data":348,"body":374,"filePath":375,"digest":376,"deferredRender":20},{"sends":349,"receives":355,"id":240,"name":367,"summary":368,"version":319,"owners":369,"repository":371},[350,352],{"id":351,"version":236},"OutOfStock",{"id":353,"version":354},"GetInventoryList","0.0.x",[356,359,362,365],{"id":357,"version":358},"InventoryAdjusted",">1.0.0",{"id":360,"version":361},"PaymentProcessed","^1.0.0",{"id":363,"version":364},"GetUserNotifications","x",{"id":366,"version":364},"GetNotificationDetails","Notifications","Service that handles orders\n",[370],{"id":30},{"language":372,"url":373},"JavaScript","https://github.com/event-catalog/pretend-shipping-service","import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe Notification Service is responsible for managing and delivering notifications to users and other services. It supports various notification channels such as email, SMS, push notifications, and in-app notifications. The service ensures reliable and timely delivery of messages and integrates with other services to trigger notifications based on specific events.\n\n\u003CTiles >\n    \u003CTile icon=\"DocumentIcon\" href={`/docs/services/${frontmatter.id}/${frontmatter.version}/changelog`}  title=\"View the changelog\" description=\"Want to know the history of this service? View the change logs\" />\n    \u003CTile icon=\"UserGroupIcon\" href=\"/docs/teams/full-stack\" title=\"Contact the team\" description=\"Any questions? Feel free to contact the owners\" />\n    \u003CTile icon=\"BoltIcon\" href={`/visualiser/services/${frontmatter.id}/${frontmatter.version}`} title={`Sends ${frontmatter.sends.length} messages`} description=\"This service sends messages to downstream consumers\" />\n    \u003CTile icon=\"BoltIcon\"  href={`/visualiser/services/${frontmatter.id}/${frontmatter.version}`} title={`Receives ${frontmatter.receives.length} messages`} description=\"This service receives messages from other services\" />\n\u003C/Tiles>\n\n\n## Architecture diagram\n\n\u003CNodeGraph />\n\n## Core Concepts\n\n\u003CAccordionGroup>\n  \u003CAccordion title=\"Notification\">\n    - Description: A message that is sent to a user or a service.\n    - Attributes: notificationId, type, recipient, content, channel, status, timestamp\n  \u003C/Accordion>\n  \u003CAccordion title=\"Channel\">\n    - Description: The medium through which the notification is delivered (e.g., email, SMS, push notification).\n    - Attributes: channelId, name, provider, configuration \n  \u003C/Accordion>\n\u003C/AccordionGroup>\n\n\u003CFooter />","../domains/Orders/services/NotificationService/index.mdx","f74d78a14c524dce","ShippingService-0.0.1",{"id":377,"data":379,"body":408,"filePath":409,"digest":410,"deferredRender":20},{"sends":380,"receives":393,"id":242,"name":403,"summary":404,"version":219,"owners":405,"repository":407},[381,383,385,387,389,391],{"id":382,"version":236},"ShipmentCreated",{"id":384,"version":236},"ReturnInitiated",{"id":386,"version":236},"ShipmentDispatched",{"id":388,"version":236},"ShipmentInTransit",{"id":390,"version":236},"ShipmentDelivered",{"id":392,"version":236},"DeliveryFailed",[394,396,398,400,402],{"id":395,"version":236},"CancelShipment",{"id":397,"version":236},"CreateReturnLabel",{"id":399,"version":236},"CreateShipment",{"id":401,"version":236},"UpdateShipmentStatus",{"id":360,"version":236},"Shipping Service","Service that handles shipping\n",[406],{"id":30},{"language":372,"url":373},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe Shipping Service is responsible for managing shipping within the system. It handles order creation, updating, status tracking, and interactions with other services such as Inventory, Payment, and Notification services to ensure smooth order processing and fulfillment.\n\n\u003CTiles >\n    \u003CTile icon=\"BoltIcon\" href={`/visualiser/services/${frontmatter.id}/${frontmatter.version}`} title={`Sends ${frontmatter.sends.length} messages`} description=\"This service sends messages to downstream consumers\" />\n    \u003CTile icon=\"BoltIcon\"  href={`/visualiser/services/${frontmatter.id}/${frontmatter.version}`} title={`Receives ${frontmatter.receives.length} messages`} description=\"This service receives messages from other services\" />\n\u003C/Tiles>\n\n### Core features\n\nThe Shipping Service is responsible for managing shipping within the system. It handles order creation, updating, status tracking, and interactions with other services such as Inventory, Payment, and Notification services to ensure smooth order processing and fulfillment.\n\n\n## Architecture diagram \n\n\u003CNodeGraph />\n\n\u003CMessageTable format=\"all\" limit={4} />\n\n\u003CFooter />","../domains/Orders/services/ShippingService/index.mdx","4e966f3f6b5fd108","PaymentService-0.0.1",{"id":411,"data":413,"body":428,"filePath":429,"digest":430,"deferredRender":20},{"sends":414,"receives":418,"id":218,"name":423,"summary":424,"version":219,"owners":425,"repository":427},[415,416],{"id":360,"version":219},{"id":417,"version":236},"GetOrder",[419,421],{"id":420,"version":219},"PaymentInitiated",{"id":422,"version":236},"GetPaymentStatus","Payment Service","Service that handles payments\n",[426],{"id":30},{"language":372,"url":373},"The Payment Service is a crucial component of our system that handles all payment-related operations. It processes payments, manages transactions, and communicates with other services through events. Using an event-driven architecture, it ensures that all actions are asynchronous, decoupled, and scalable.\n\n\u003CNodeGraph />\n\n### Key Components\n- Payment API: Exposes endpoints for initiating payments and querying payment status.\n- Payment Processor: Handles the core payment processing logic.\n- Event Bus: Manages the communication between services using events.\n- Payment Gateway: Interfaces with external payment providers.\n- Transaction Service: Manages transaction records and states.\n- Notification Service: Sends notifications related to payment status changes.\n- Database: Stores transaction data and payment status.","../domains/Payment/services/PaymentService/index.mdx","282b121f63db0f96","InventoryService-0.0.2",{"id":431,"data":433,"body":458,"filePath":459,"digest":460,"deferredRender":20},{"sends":434,"receives":439,"id":235,"name":451,"summary":452,"version":319,"owners":453,"repository":457},[435,437,438],{"id":357,"version":436},"0.0.4",{"id":351,"version":244},{"id":417,"version":219},[440,442,443,445,447,449],{"id":441,"version":219},"OrderConfirmed",{"id":353,"version":219},{"id":444,"version":236},"OrderAmended",{"id":446,"version":244},"UpdateInventory",{"id":448,"version":236},"AddInventory",{"id":450,"version":236},"GetInventoryStatus","Inventory Service","Service that handles the inventory\n",[454,455,456],{"id":30},{"id":43},{"id":54},{"language":372,"url":373},"import Footer from '@catalog/components/footer.astro';\n\n\n\n## Overview\n\nThe Inventory Service is a critical component of the system responsible for managing product stock levels, tracking inventory movements, and ensuring product availability. It interacts with other services to maintain accurate inventory records and supports operations such as order fulfillment, restocking, and inventory audits.\n\n\u003CTiles >\n    \u003CTile icon=\"DocumentIcon\" href={`/docs/services/${frontmatter.id}/${frontmatter.version}/changelog`}  title=\"View the changelog\" description=\"Want to know the history of this service? View the change logs\" />\n    \u003CTile icon=\"UserGroupIcon\" href=\"/docs/teams/full-stack\" title=\"Contact the team\" description=\"Any questions? Feel free to contact the owners\" />\n    \u003CTile icon=\"BoltIcon\" href={`/visualiser/services/${frontmatter.id}/${frontmatter.version}`} title={`Sends ${frontmatter.sends.length} messages`} description=\"This service sends messages to downstream consumers\" />\n    \u003CTile icon=\"BoltIcon\"  href={`/visualiser/services/${frontmatter.id}/${frontmatter.version}`} title={`Receives ${frontmatter.receives.length} messages`} description=\"This service receives messages from other services\" />\n\u003C/Tiles>\n\n\n## Architecture diagram\n\n\u003CNodeGraph title=\"Hello world\" />\n\n\n\u003CSteps title=\"How to connect to Inventory Service\">\n  \u003CStep title=\"Obtain API credentials\">\n    Request API credentials from the Inventory Service team.\n  \u003C/Step>\n  \u003CStep title=\"Install the SDK\">\n    Run the following command in your project directory:\n    ```bash\n    npm install inventory-service-sdk\n    ```\n  \u003C/Step>\n  \u003CStep title=\"Initialize the client\">\n  Use the following code to initialize the Inventory Service client:\n\n  ```js\n  const InventoryService = require('inventory-service-sdk');\n  const client = new InventoryService.Client({\n    clientId: 'YOUR_CLIENT_ID',\n    clientSecret: 'YOUR_CLIENT_SECRET',\n    apiUrl: 'https://api.inventoryservice.com/v1'\n  });\n```\n  \u003C/Step>\n  \u003CStep title=\"Make API calls\">\n  \n  You can now use the client to make API calls. For example, to get all products:\n\n  ```js\n  client.getProducts()\n    .then(products => console.log(products))\n    .catch(error => console.error(error));\n  ```\n  \u003C/Step>\n\u003C/Steps>\n\n\u003CFooter />","../domains/Orders/services/InventoryService/index.mdx","e6df0ae618416ffa","OrdersService-0.0.3",{"id":461,"data":463,"body":480,"filePath":481,"digest":482,"deferredRender":20},{"sends":464,"receives":470,"id":238,"name":473,"summary":368,"version":244,"owners":474,"schemaPath":476,"repository":477,"specifications":478},[465,466,468,469],{"id":444,"version":236},{"id":467,"version":236},"OrderCancelled",{"id":441,"version":236},{"id":448,"version":244},[471,472],{"id":357,"version":244},{"id":417,"version":236},"Orders Service",[475],{"id":30},"openapi.yml",{"language":372,"url":373},{"openapiPath":476,"asyncapiPath":479},"order-service-asyncapi.yaml","import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe Orders Service is responsible for managing customer orders within the system. It handles order creation, updating, status tracking, and interactions with other services such as Inventory, Payment, and Notification services to ensure smooth order processing and fulfillment.\n\n\u003CTiles >\n    \u003CTile icon=\"DocumentIcon\" href={`/docs/services/${frontmatter.id}/${frontmatter.version}/changelog`}  title=\"View the changelog\" description=\"Want to know the history of this service? View the change logs\" />\n    \u003CTile icon=\"UserGroupIcon\" href=\"/docs/teams/full-stack\" title=\"Contact the team\" description=\"Any questions? Feel free to contact the owners\" />\n    \u003CTile icon=\"BoltIcon\" href={`/visualiser/services/${frontmatter.id}/${frontmatter.version}`} title={`Sends ${frontmatter.sends.length} messages`} description=\"This service sends messages to downstream consumers\" />\n    \u003CTile icon=\"BoltIcon\"  href={`/visualiser/services/${frontmatter.id}/${frontmatter.version}`} title={`Receives ${frontmatter.receives.length} messages`} description=\"This service receives messages from other services\" />\n\u003C/Tiles>\n\n## Architecture diagram \n\n\u003CNodeGraph />\n\n\u003CFooter />","../domains/Orders/services/OrdersService/index.mdx","2b98e28826745d5c","SubscriptionService-0.0.1",{"id":483,"data":485,"body":504,"filePath":505,"digest":506,"deferredRender":20},{"sends":486,"receives":491,"id":271,"name":498,"summary":499,"version":219,"owners":500,"repository":502},[487,489],{"id":488,"version":219},"UserSubscriptionStarted",{"id":490,"version":219},"UserSubscriptionCancelled",[492,494,496],{"id":493,"version":219},"SubscribeUser",{"id":495,"version":219},"CancelSubscription",{"id":497,"version":236},"GetSubscriptionStatus","Subscription Service","Service that handles subscriptions\n",[501],{"id":30},{"language":372,"url":503},"https://github.com/event-catalog/pretend-subscription-service","import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe subscription Service is responsible for handling customer subscriptions in our system. It handles new subscriptions, cancelling subscriptions and updating them.\n\n\u003CTiles >\n    \u003CTile icon=\"DocumentIcon\" href={`/docs/services/${frontmatter.id}/${frontmatter.version}/changelog`}  title=\"View the changelog\" description=\"Want to know the history of this service? View the change logs\" />\n    \u003CTile icon=\"UserGroupIcon\" href=\"/docs/teams/full-stack\" title=\"Contact the team\" description=\"Any questions? Feel free to contact the owners\" />\n    \u003CTile icon=\"BoltIcon\" href={`/visualiser/services/${frontmatter.id}/${frontmatter.version}`} title={`Sends ${frontmatter.sends.length} messages`} description=\"This service sends messages to downstream consumers\" />\n    \u003CTile icon=\"BoltIcon\"  href={`/visualiser/services/${frontmatter.id}/${frontmatter.version}`} title={`Receives ${frontmatter.receives.length} messages`} description=\"This service receives messages from other services\" />\n\u003C/Tiles>\n\n## Architecture diagram \n\n\u003CNodeGraph />\n\n\u003CFooter />","../domains/Subscriptions/services/SubscriptionService/index.mdx","f0e30032bcff9850","InventoryService-0.0.1",{"id":507,"data":509,"body":523,"filePath":524,"digest":525,"deferredRender":20},{"sends":510,"receives":513,"id":235,"name":451,"summary":452,"version":219,"owners":518,"repository":522},[511,512],{"id":357,"version":436},{"id":351,"version":244},[514,515,516,517],{"id":441,"version":219},{"id":467,"version":219},{"id":444,"version":219},{"id":446,"version":244},[519,520,521],{"id":30},{"id":43},{"id":54},{"language":372,"url":373},"## Overview\n\nThe Inventory Service is a critical component of the system responsible for managing product stock levels, tracking inventory movements, and ensuring product availability. It interacts with other services to maintain accurate inventory records and supports operations such as order fulfillment, restocking, and inventory audits.\n\n## Architecture diagram\n\n\u003CNodeGraph title=\"Hello world\" />","../domains/Orders/services/InventoryService/versioned/0.0.1/index.mdx","405a2c4b0e672d22","OrdersService-0.0.2",{"id":526,"data":528,"body":537,"filePath":538,"digest":539,"deferredRender":20},{"sends":529,"receives":531,"id":238,"name":473,"summary":368,"version":319,"owners":533,"schemaPath":476,"repository":535,"specifications":536},[530],{"id":448,"version":244},[532],{"id":357,"version":244},[534],{"id":30},{"language":372,"url":373},{"openapiPath":476,"asyncapiPath":479},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe Orders Service is responsible for managing customer orders within the system. It handles order creation, updating, status tracking, and interactions with other services such as Inventory, Payment, and Notification services to ensure smooth order processing and fulfillment.\n\n## Architecture diagram \n\n\u003CNodeGraph />\n\n\u003CFooter />","../domains/Orders/services/OrdersService/versioned/0.0.2/index.mdx","942495f4e1b12dcb","events",["Map",542,543,556,557,568,569,590,591,611,612,629,630,639,640,657,658,673,674,683,684,693,694,703,704,713,714,727,728,737,738,747,748,760,761,767,768,782,783],"UserSubscriptionStarted-0.0.1",{"id":542,"data":544,"body":553,"filePath":554,"digest":555,"deferredRender":20},{"id":488,"name":545,"summary":546,"version":219,"badges":547,"owners":551},"User subscription started","An event that is triggered when a new user subscription has started\n",[548],{"content":549,"backgroundColor":550,"textColor":550},"New!","green",[552],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `UserSubscriptionStarted` event is triggered when a user starts a new subscription with our service.\n\n## Architecture diagram\n\n\u003CNodeGraph />\n\n\u003CFooter />","../domains/Subscriptions/services/SubscriptionService/events/UserSubscriptionStarted/index.mdx","9fa44738c1cb5aee","UserSubscriptionCancelled-0.0.1",{"id":556,"data":558,"body":565,"filePath":566,"digest":567,"deferredRender":20},{"id":490,"name":559,"summary":560,"version":219,"badges":561,"owners":563},"User subscription cancelled","An event that is triggered when a users subscription has been cancelled\n",[562],{"content":549,"backgroundColor":550,"textColor":550},[564],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `UserSubscriptionCancelled` event is triggered when a users subscription has been cancelled.\n\n## Architecture diagram\n\n\u003CNodeGraph />\n\n\u003CFooter />","../domains/Subscriptions/services/SubscriptionService/events/UserSubscriptionCancelled/index.mdx","4a5b5a5b14d2c912","OutOfStock-0.0.4",{"id":568,"data":570,"body":587,"filePath":588,"digest":589,"deferredRender":20},{"channels":571,"id":351,"name":574,"summary":575,"version":436,"badges":576,"owners":581},[572],{"id":573,"version":236},"inventory.{env}.events","Inventory out of stock","Indicates inventory is out of stock\n",[577,579],{"content":578,"backgroundColor":550,"textColor":550},"Recently updated!",{"content":580,"backgroundColor":293,"textColor":293},"Channel:Apache Kafka",[582,583,584,585,586],{"id":30},{"id":11},{"id":21},{"id":43},{"id":54},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `Inventory Adjusted` event is triggered whenever there is a change in the inventory levels of a product. This could occur due to various reasons such as receiving new stock, sales, returns, or manual adjustments by the inventory management team. The event ensures that all parts of the system that rely on inventory data are kept up-to-date with the latest inventory levels.\n\n\u003CNodeGraph />\n\n### Payload\nThe payload of the `Inventory Adjusted` event includes the following fields:\n\n```json title=\"Example of payload\" frame=\"terminal\"\n{\n  \"event_id\": \"string\",\n  \"timestamp\": \"ISO 8601 date-time\",\n  \"product_id\": \"string\",\n  \"adjusted_quantity\": \"integer\",\n  \"new_quantity\": \"integer\",\n  \"adjustment_reason\": \"string\",\n  \"adjusted_by\": \"string\"\n}\n```\n\n### Producing the Event\n\nTo produce an Inventory Adjusted event, use the following example Kafka producer configuration in Python:\n\n```python title=\"Produce event in Python\" frame=\"terminal\"\nfrom kafka import KafkaProducer\nimport json\nfrom datetime import datetime\n\n# Kafka configuration\nproducer = KafkaProducer(\n    bootstrap_servers=['localhost:9092'],\n    value_serializer=lambda v: json.dumps(v).encode('utf-8')\n)\n\n# Event data\nevent_data = {\n  \"event_id\": \"abc123\",\n  \"timestamp\": datetime.utcnow().isoformat() + 'Z',\n  \"product_id\": \"prod987\",\n  \"adjusted_quantity\": 10,\n  \"new_quantity\": 150,\n  \"adjustment_reason\": \"restock\",\n  \"adjusted_by\": \"user123\"\n}\n\n# Send event to Kafka topic\nproducer.send('inventory.adjusted', event_data)\nproducer.flush()\n```\n\n### Consuming the Event\n\nTo consume an Inventory Adjusted event, use the following example Kafka consumer configuration in Python:\n\n```python title=\"Consuming the event with python\" frame=\"terminal\"\nfrom kafka import KafkaConsumer\nimport json\n\n# Kafka configuration\nconsumer = KafkaConsumer(\n    'inventory.adjusted',\n    bootstrap_servers=['localhost:9092'],\n    auto_offset_reset='earliest',\n    enable_auto_commit=True,\n    group_id='inventory_group',\n    value_serializer=lambda v: json.dumps(v).encode('utf-8')\n)\n\n# Consume events\nfor message in consumer:\n    event_data = json.loads(message.value)\n    print(f\"Received Inventory Adjusted event: {event_data}\")\n```\n\n\u003CFooter />","../domains/Orders/services/InventoryService/events/OutOfStock/index.mdx","c0d6025ab7bafea5","InventoryAdjusted-1.0.1",{"id":590,"data":592,"body":608,"filePath":609,"digest":610,"deferredRender":20},{"channels":593,"id":357,"name":595,"summary":596,"version":597,"badges":598,"owners":601,"schemaPath":607},[594],{"id":573,"version":236},"Inventory adjusted","Indicates a change in inventory level\n","1.0.1",[599,600],{"content":578,"backgroundColor":550,"textColor":550},{"content":580,"backgroundColor":293,"textColor":293},[602,603,604,605,606],{"id":30},{"id":11},{"id":21},{"id":43},{"id":54},"schema.avro","import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `Inventory Adjusted` event is triggered whenever there is a change in the inventory levels of a product. This could occur due to various reasons such as receiving new stock, sales, returns, or manual adjustments by the inventory management team. The event ensures that all parts of the system that rely on inventory data are kept up-to-date with the latest inventory levels.\n\n\u003CTiles >\n    \u003CTile icon=\"UserGroupIcon\" href=\"/docs/teams/full-stack\" title=\"Contact the team\" description=\"Any questions? Feel free to contact the owners\" />\n    \u003CTile icon=\"DocumentIcon\" href={`/generated/events/Inventory/${frontmatter.id}/schema.avro`} title=\"View the schema\" description=\"View the schema directly in your browser\" />\n\u003C/Tiles>\n\n## Architecture diagram\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />\n\n## Payload example\n\nEvent example you my see being published.\n\n```json title=\"Payload example\"\n{\n  \"Name\": \"John Doe\",\n  \"Age\": 30,\n  \"Department\": \"Engineering\",\n  \"Position\": \"Software Engineer\",\n  \"Salary\": 85000.50,\n  \"JoinDate\": \"2024-01-15\"\n}\n```\n\n## Schema (avro)\n\n\u003CSchema file=\"schema.avro\" title=\"Inventory Adjusted Schema (avro)\" />\n\n## Producing the Event\n\nTo produce an Inventory Adjusted event, use the following example Kafka producer configuration in Python:\n\n```python title=\"Produce event in Python\" frame=\"terminal\"\nfrom kafka import KafkaProducer\nimport json\nfrom datetime import datetime\n\n# Kafka configuration\nproducer = KafkaProducer(\n    bootstrap_servers=['localhost:9092'],\n    value_serializer=lambda v: json.dumps(v).encode('utf-8')\n)\n\n# Event data\nevent_data = {\n  \"event_id\": \"abc123\",\n  \"timestamp\": datetime.utcnow().isoformat() + 'Z',\n  \"product_id\": \"prod987\",\n  \"adjusted_quantity\": 10,\n  \"new_quantity\": 150,\n  \"adjustment_reason\": \"restock\",\n  \"adjusted_by\": \"user123\"\n}\n\n# Send event to Kafka topic\nproducer.send('inventory.adjusted', event_data)\nproducer.flush()\n```\n\n### Consuming the Event\n\nTo consume an Inventory Adjusted event, use the following example Kafka consumer configuration in Python:\n\n```python title=\"Consuming the event with python\" frame=\"terminal\"\nfrom kafka import KafkaConsumer\nimport json\n\n# Kafka configuration\nconsumer = KafkaConsumer(\n    'inventory.adjusted',\n    bootstrap_servers=['localhost:9092'],\n    auto_offset_reset='earliest',\n    enable_auto_commit=True,\n    group_id='inventory_group',\n    value_serializer=lambda v: json.dumps(v).encode('utf-8')\n)\n\n# Consume events\nfor message in consumer:\n    event_data = json.loads(message.value)\n    print(f\"Received Inventory Adjusted event: {event_data}\")\n```\n\n\u003CFooter />","../domains/Orders/services/InventoryService/events/InventoryAdjusted/index.mdx","7bd5fa95fba0ed5d","OrderCancelled-0.0.1",{"id":611,"data":613,"body":626,"filePath":627,"digest":628,"deferredRender":20},{"channels":614,"id":467,"name":617,"summary":618,"version":219,"badges":619,"owners":622,"schemaPath":625},[615],{"id":616,"version":236},"orders.{env}.events","Order cancelled","Indicates an order has been canceled\n",[620,621],{"content":578,"backgroundColor":550,"textColor":550},{"content":580,"backgroundColor":293,"textColor":293},[623,624],{"id":30},{"id":11},"schema.json","import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe OrderCancelled event is triggered whenever an existing order is cancelled. This event ensures that all relevant services are notified of the cancellation, allowing them to take appropriate actions such as updating inventory levels, refunding payments, and notifying the user. The event helps maintain consistency across the system by ensuring all dependent services are aware of the order cancellation.\n\n## Example payload\n\n```json title=\"Example payload\"\n{\n  \"orderId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"userId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"orderItems\": [\n    {\n      \"productId\": \"789e1234-b56c-78d9-e012-3456789fghij\",\n      \"productName\": \"Example Product\",\n      \"quantity\": 2,\n      \"unitPrice\": 29.99,\n      \"totalPrice\": 59.98\n    }\n  ],\n  \"orderStatus\": \"cancelled\",\n  \"totalAmount\": 59.98,\n  \"cancellationReason\": \"Customer requested cancellation\",\n  \"timestamp\": \"2024-07-04T14:48:00Z\"\n}\n\n```\n\n## Schema\n\nJSON schema for the event.\n\n\u003CSchema title=\"JSON Schema\" file=\"schema.json\"/>\n\n\u003CFooter />","../domains/Orders/services/OrdersService/events/OrderCancelled/index.mdx","e43a59d5b38ea2e7","DeliveryFailed-0.0.1",{"id":629,"data":631,"body":636,"filePath":637,"digest":638,"deferredRender":20},{"id":392,"name":632,"summary":633,"version":219,"owners":634,"schemaPath":625},"Delivery failed","Event that is emitted when a shipment delivery fails.\n",[635],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `DeliveryFailed` event is emitted when a shipment delivery fails. It provides information such as the shipment status (e.g., pending, completed, shipped), the items within the shipment, billing and shipping details, payment information, and the order's total amount. This query is commonly used by systems managing order processing, customer service, or order tracking functionalities.\n\nThis event can be applied in e-commerce systems, marketplaces, or any platform where users and systems need real-time shipment data for tracking, auditing, or managing customer purchases.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/ShippingService/events/DeliveryFailed/index.mdx","388b45c6a5232dd7","OrderAmended-0.0.1",{"id":639,"data":641,"body":654,"filePath":655,"digest":656,"deferredRender":20},{"channels":642,"id":444,"name":646,"summary":647,"version":219,"badges":648,"owners":651,"schemaPath":607},[643],{"parameters":644,"id":616,"version":236},{"env":645},"staging","Order amended","Indicates an order has been changed\n",[649,650],{"content":578,"backgroundColor":550,"textColor":550},{"content":580,"backgroundColor":293,"textColor":293},[652,653],{"id":30},{"id":11},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe OrderAmended event is triggered whenever an existing order is modified. This event ensures that all relevant services are notified of changes to an order, such as updates to order items, quantities, shipping information, or status. The event allows the system to maintain consistency and ensure that all dependent services can react appropriately to the amendments.\n\n\u003CNodeGraph />\n\n## Example payload\n\n```json title=\"Example Payload\"\n{\n  \"orderId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"userId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"amendedItems\": [\n    {\n      \"productId\": \"789e1234-b56c-78d9-e012-3456789fghij\",\n      \"productName\": \"Example Product\",\n      \"oldQuantity\": 2,\n      \"newQuantity\": 3,\n      \"unitPrice\": 29.99,\n      \"totalPrice\": 89.97\n    }\n  ],\n  \"orderStatus\": \"confirmed\",\n  \"totalAmount\": 150.75,\n  \"timestamp\": \"2024-07-04T14:48:00Z\"\n}\n```\n\n## Schema (Avro)\n\n\u003CSchema file=\"schema.avro\" />\n\n## Schema (JSON)\n\n\u003CSchema file=\"schema.json\" />\n\n\u003CFooter />","../domains/Orders/services/OrdersService/events/OrderAmended/index.mdx","9643123054610678","OrderConfirmed-0.0.1",{"id":657,"data":659,"body":670,"filePath":671,"digest":672,"deferredRender":20},{"channels":660,"id":441,"name":662,"summary":663,"version":219,"badges":664,"owners":667,"schemaPath":625},[661],{"id":616,"version":236},"Order confirmed","Indicates an order has been confirmed\n",[665,666],{"content":578,"backgroundColor":550,"textColor":550},{"content":580,"backgroundColor":293,"textColor":293},[668,669],{"id":30},{"id":11},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe OrderConfirmed event is triggered when an order has been successfully confirmed. This event notifies relevant services that the order is ready for further processing, such as inventory adjustment, payment finalization, and preparation for shipping.\n\n## Architecture Diagram\n\n\u003CNodeGraph />\n\n## Payload\n\n```json title=\"Example payload\"\n{\n  \"orderId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"userId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"orderItems\": [\n    {\n      \"productId\": \"789e1234-b56c-78d9-e012-3456789fghij\",\n      \"productName\": \"Example Product\",\n      \"quantity\": 2,\n      \"unitPrice\": 29.99,\n      \"totalPrice\": 59.98\n    }\n  ],\n  \"orderStatus\": \"confirmed\",\n  \"totalAmount\": 150.75,\n  \"confirmationTimestamp\": \"2024-07-04T14:48:00Z\"\n}\n```\n\n## Schema\n\n\u003CSchema file=\"schema.json\"/>\n\n\u003CFooter />","../domains/Orders/services/OrdersService/events/OrderConfirmed/index.mdx","ee691c69898ff75b","ReturnInitiated-0.0.1",{"id":673,"data":675,"body":680,"filePath":681,"digest":682,"deferredRender":20},{"id":384,"name":676,"summary":677,"version":219,"owners":678,"schemaPath":625},"Return initiated","Event that is emitted when a return is initiated.\n",[679],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `ReturnInitiated` event is emitted when a return is initiated. It provides information such as the shipment status (e.g., pending, completed, shipped), the items within the shipment, billing and shipping details, payment information, and the order's total amount. This query is commonly used by systems managing order processing, customer service, or order tracking functionalities.\n\nThis event can be applied in e-commerce systems, marketplaces, or any platform where users and systems need real-time return data for tracking, auditing, or managing customer purchases.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/ShippingService/events/ReturnInitiated/index.mdx","8c07547b7d221ec0","ShipmentCreated-0.0.1",{"id":683,"data":685,"body":690,"filePath":691,"digest":692,"deferredRender":20},{"id":382,"name":686,"summary":687,"version":219,"owners":688,"schemaPath":625},"Shipment created","Event that is emitted when a shipment is created.\n",[689],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `ShipmentCreated` event is emitted when a shipment is created. It provides information such as the shipment status (e.g., pending, completed, shipped), the items within the shipment, billing and shipping details, payment information, and the order's total amount. This query is commonly used by systems managing order processing, customer service, or order tracking functionalities.\n\nThis event can be applied in e-commerce systems, marketplaces, or any platform where users and systems need real-time shipment data for tracking, auditing, or managing customer purchases.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/ShippingService/events/ShipmentCreated/index.mdx","81baf1c8ce150762","ShipmentInTransit-0.0.1",{"id":693,"data":695,"body":700,"filePath":701,"digest":702,"deferredRender":20},{"id":388,"name":696,"summary":697,"version":219,"owners":698,"schemaPath":625},"Shipment in transit","Event that is emitted when a shipment is in transit.\n",[699],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `ShipmentInTransit` event is emitted when a shipment is in transit. It provides information such as the shipment status (e.g., pending, completed, shipped), the items within the shipment, billing and shipping details, payment information, and the order's total amount. This query is commonly used by systems managing order processing, customer service, or order tracking functionalities.\n\nThis event can be applied in e-commerce systems, marketplaces, or any platform where users and systems need real-time shipment data for tracking, auditing, or managing customer purchases.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/ShippingService/events/ShipmentInTransit/index.mdx","57803e3280f01326","ShipmentDelivered-0.0.1",{"id":703,"data":705,"body":710,"filePath":711,"digest":712,"deferredRender":20},{"id":390,"name":706,"summary":707,"version":219,"owners":708,"schemaPath":625},"Shipment delivered","Event that is emitted when a shipment is delivered.\n",[709],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `ShipmentDelivered` event is emitted when a shipment is delivered. It provides information such as the shipment status (e.g., pending, completed, shipped), the items within the shipment, billing and shipping details, payment information, and the order's total amount. This query is commonly used by systems managing order processing, customer service, or order tracking functionalities.\n\nThis event can be applied in e-commerce systems, marketplaces, or any platform where users and systems need real-time shipment data for tracking, auditing, or managing customer purchases.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/ShippingService/events/ShipmentDelivered/index.mdx","4aa31b957c9f7f14","PaymentInitiated-0.0.1",{"id":713,"data":715,"body":724,"filePath":725,"digest":726,"deferredRender":20},{"channels":716,"id":420,"name":720,"summary":721,"version":219,"owners":722},[717],{"parameters":718,"id":719,"version":236},{"env":645},"payments.{env}.events","Payment Initiated","Event is triggered when a user initiates a payment through the Payment Service",[723],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe Payment Initiated event is triggered when a user initiates a payment through the Payment Service. This event signifies the beginning of the payment process and contains all necessary information to process the payment.\n\n\u003CNodeGraph />\n\n### Payload Example\n\n```json title=\"Payload example\"\n{\n  \"userId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"orderId\": \"789e1234-b56c-78d9-e012-3456789fghij\",\n  \"amount\": 100.50,\n  \"paymentMethod\": \"CreditCard\",\n  \"timestamp\": \"2024-07-04T14:48:00Z\"\n}\n```\n\n### Security Considerations\n\n- **Authentication**: Ensure that only authenticated users can initiate a payment, and the userId in the payload matches the authenticated user.\n- **Data Validation**: Validate all input data to prevent injection attacks or other malicious input.\n- **Sensitive Data Handling**: Avoid including sensitive information (e.g., credit card numbers) in the event payload. Use secure channels and encryption for such data.\n\n\u003CFooter />","../domains/Payment/services/PaymentService/events/PaymentInitiated/index.mdx","9dba7743582f388c","ShipmentDispatched-0.0.1",{"id":727,"data":729,"body":734,"filePath":735,"digest":736,"deferredRender":20},{"id":386,"name":730,"summary":731,"version":219,"owners":732,"schemaPath":625},"Shipment dispatched","Event that is emitted when a shipment is dispatched.\n",[733],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `ShipmentDispatched` event is emitted when a shipment is dispatched. It provides information such as the shipment status (e.g., pending, completed, shipped), the items within the shipment, billing and shipping details, payment information, and the order's total amount. This query is commonly used by systems managing order processing, customer service, or order tracking functionalities.\n\nThis event can be applied in e-commerce systems, marketplaces, or any platform where users and systems need real-time shipment data for tracking, auditing, or managing customer purchases.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/ShippingService/events/ShipmentDispatched/index.mdx","cb4e2735758f102b","InventoryAdjusted-0.0.1",{"id":737,"data":739,"body":744,"filePath":745,"digest":746,"deferredRender":20},{"id":357,"name":595,"summary":596,"version":219,"badges":740,"owners":742},[741],{"content":578,"backgroundColor":550,"textColor":550},[743],{"id":30},"\u003CAdmonition>When firing this event make sure you set the `correlation-id` in the headers. Our schemas have standard metadata make sure you read and follow it.\u003C/Admonition>\n\n### Details\n\n\u003CNodeGraph />","../domains/Orders/services/InventoryService/events/InventoryAdjusted/versioned/0.0.1/index.mdx","630ca607b1bbb6c6","PaymentProcessed-1.0.0",{"id":747,"data":749,"body":757,"filePath":758,"digest":759,"deferredRender":20},{"channels":750,"id":360,"name":753,"summary":754,"version":287,"owners":755},[751],{"parameters":752,"id":719,"version":236},{"env":645},"Payment Processed","Event is triggered after the payment has been successfully processed",[756],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe PaymentProcessed event is triggered after the payment has been successfully processed by the Payment Service. This event signifies that a payment has been confirmed, and it communicates the outcome to other services and components within the system.\n\n\u003CNodeGraph />\n\n### Payload Example\n\n```json title=\"Payload example\"\n{\n  \"transactionId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"userId\": \"123e4567-e89b-12d3-a456-426614174000\",\n  \"orderId\": \"789e1234-b56c-78d9-e012-3456789fghij\",\n  \"amount\": 100.50,\n  \"paymentMethod\": \"CreditCard\",\n  \"status\": \"confirmed\",\n  \"confirmationDetails\": {\n    \"gatewayResponse\": \"Approved\",\n    \"transactionId\": \"abc123\"\n  },\n  \"timestamp\": \"2024-07-04T14:48:00Z\"\n}\n```\n\n### Security Considerations\n\n- **Data Validation**: Ensure that all data in the event payload is validated before publishing to prevent injection attacks or other malicious activities.\n- **Sensitive Data Handling**: Avoid including sensitive information (e.g., full credit card numbers) in the event payload. Use secure channels and encryption for such data.\n- **Authentication and Authorization**: Ensure that only authorized services can publish or consume PaymentProcessed events.\n\n\u003CFooter />","../domains/Payment/services/PaymentService/events/PaymentProcessed/index.mdx","45b319e31a874a90","PaymentProcessed-0.0.1",{"id":760,"data":762,"body":757,"filePath":765,"digest":766,"deferredRender":20},{"id":360,"name":753,"summary":754,"version":219,"owners":763},[764],{"id":30},"../domains/Payment/services/PaymentService/events/PaymentProcessed/versioned/0.0.1/index.mdx","1b67685ce94288a6","InventoryAdjusted-1.0.0",{"id":767,"data":769,"body":779,"filePath":780,"digest":781,"deferredRender":20},{"id":357,"name":595,"summary":596,"version":287,"badges":770,"owners":773},[771,772],{"content":578,"backgroundColor":550,"textColor":550},{"content":580,"backgroundColor":293,"textColor":293},[774,775,776,777,778],{"id":30},{"id":11},{"id":21},{"id":43},{"id":54},"## Overview\n\nThe `Inventory Adjusted` event is triggered whenever there is a change in the inventory levels of a product. This could occur due to various reasons such as receiving new stock, sales, returns, or manual adjustments by the inventory management team. The event ensures that all parts of the system that rely on inventory data are kept up-to-date with the latest inventory levels.\n\n\u003CNodeGraph />\n\n## Event Details\n\n### Event Name\n`inventory.adjusted`\n\n### Description\nThis event indicates that the inventory count for one or more products has been adjusted. The event carries the updated inventory details including the product ID, the new quantity, and the reason for the adjustment.\n\n### Payload\nThe payload of the `Inventory Adjusted` event includes the following fields:\n\n```json title=\"Example of payload\" frame=\"terminal\"\n{\n  \"event_id\": \"string\",\n  \"timestamp\": \"ISO 8601 date-time\",\n  \"product_id\": \"string\",\n  \"adjusted_quantity\": \"integer\",\n  \"new_quantity\": \"integer\",\n  \"adjustment_reason\": \"string\",\n  \"adjusted_by\": \"string\"\n}\n```\n\n### Producing the Event\n\nTo produce an Inventory Adjusted event, use the following example Kafka producer configuration in Python:\n\n```python title=\"Produce event in Python\" frame=\"terminal\"\nfrom kafka import KafkaProducer\nimport json\nfrom datetime import datetime\n\n# Kafka configuration\nproducer = KafkaProducer(\n    bootstrap_servers=['localhost:9092'],\n    value_serializer=lambda v: json.dumps(v).encode('utf-8')\n)\n\n# Event data\nevent_data = {\n  \"event_id\": \"abc123\",\n  \"timestamp\": datetime.utcnow().isoformat() + 'Z',\n  \"product_id\": \"prod987\",\n  \"adjusted_quantity\": 10,\n  \"new_quantity\": 150,\n  \"adjustment_reason\": \"restock\",\n  \"adjusted_by\": \"user123\"\n}\n\n# Send event to Kafka topic\nproducer.send('inventory.adjusted', event_data)\nproducer.flush()\n```\n\n### Consuming the Event\n\nTo consume an Inventory Adjusted event, use the following example Kafka consumer configuration in Python:\n\n```python title=\"Consuming the event with python\" frame=\"terminal\"\nfrom kafka import KafkaConsumer\nimport json\n\n# Kafka configuration\nconsumer = KafkaConsumer(\n    'inventory.adjusted',\n    bootstrap_servers=['localhost:9092'],\n    auto_offset_reset='earliest',\n    enable_auto_commit=True,\n    group_id='inventory_group',\n    value_serializer=lambda v: json.dumps(v).encode('utf-8')\n)\n\n# Consume events\nfor message in consumer:\n    event_data = json.loads(message.value)\n    print(f\"Received Inventory Adjusted event: {event_data}\")\n```","../domains/Orders/services/InventoryService/events/InventoryAdjusted/versioned/1.0.0/index.mdx","d1036026c96a1481","OutOfStock-0.0.1",{"id":782,"data":784,"body":794,"filePath":795,"digest":796,"deferredRender":20},{"id":351,"name":574,"summary":575,"version":219,"badges":785,"owners":788},[786,787],{"content":578,"backgroundColor":550,"textColor":550},{"content":580,"backgroundColor":293,"textColor":293},[789,790,791,792,793],{"id":30},{"id":11},{"id":21},{"id":43},{"id":54},"## Overview\n\nThe `Inventory Adjusted` event is triggered whenever there is a change in the inventory levels of a product. This could occur due to various reasons such as receiving new stock, sales, returns, or manual adjustments by the inventory management team. The event ensures that all parts of the system that rely on inventory data are kept up-to-date with the latest inventory levels.\n\n\u003CNodeGraph />\n\n### Payload\nThe payload of the `Inventory Adjusted` event includes the following fields:\n\n```json title=\"Example of payload\" frame=\"terminal\"\n{\n  \"event_id\": \"string\",\n  \"timestamp\": \"ISO 8601 date-time\",\n  \"product_id\": \"string\",\n  \"adjusted_quantity\": \"integer\",\n  \"new_quantity\": \"integer\",\n  \"adjustment_reason\": \"string\",\n  \"adjusted_by\": \"string\"\n}\n```\n\n### Producing the Event\n\nTo produce an Inventory Adjusted event, use the following example Kafka producer configuration in Python:\n\n```python title=\"Produce event in Python\" frame=\"terminal\"\nfrom kafka import KafkaProducer\nimport json\nfrom datetime import datetime\n\n# Kafka configuration\nproducer = KafkaProducer(\n    bootstrap_servers=['localhost:9092'],\n    value_serializer=lambda v: json.dumps(v).encode('utf-8')\n)\n\n# Event data\nevent_data = {\n  \"event_id\": \"abc123\",\n  \"timestamp\": datetime.utcnow().isoformat() + 'Z',\n  \"product_id\": \"prod987\",\n  \"adjusted_quantity\": 10,\n  \"new_quantity\": 150,\n  \"adjustment_reason\": \"restock\",\n  \"adjusted_by\": \"user123\"\n}\n\n# Send event to Kafka topic\nproducer.send('inventory.adjusted', event_data)\nproducer.flush()\n```\n\n### Consuming the Event\n\nTo consume an Inventory Adjusted event, use the following example Kafka consumer configuration in Python:\n\n```python title=\"Consuming the event with python\" frame=\"terminal\"\nfrom kafka import KafkaConsumer\nimport json\n\n# Kafka configuration\nconsumer = KafkaConsumer(\n    'inventory.adjusted',\n    bootstrap_servers=['localhost:9092'],\n    auto_offset_reset='earliest',\n    enable_auto_commit=True,\n    group_id='inventory_group',\n    value_serializer=lambda v: json.dumps(v).encode('utf-8')\n)\n\n# Consume events\nfor message in consumer:\n    event_data = json.loads(message.value)\n    print(f\"Received Inventory Adjusted event: {event_data}\")\n```","../domains/Orders/services/InventoryService/events/OutOfStock/versioned/0.0.1/index.mdx","4c36dcaa235baf4f","commands",["Map",799,800,818,819,837,838,854,855,864,865,874,875,884,885,896,897,908,909],"AddInventory-0.0.3",{"id":799,"data":801,"body":815,"filePath":816,"digest":817,"deferredRender":20},{"channels":802,"id":448,"name":805,"summary":806,"version":244,"badges":807,"owners":809,"schemaPath":625},[803],{"parameters":804,"id":573,"version":236},{"env":645},"Add inventory","Command that will add item to a given inventory id\n",[808],{"content":578,"backgroundColor":550,"textColor":550},[810,811,812,813,814],{"id":30},{"id":11},{"id":21},{"id":43},{"id":54},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe AddInventory command is issued to add new stock to the inventory. This command is used by the inventory management system to update the quantity of products available in the warehouse or store.\n\n## Architecture diagram\n\n\u003CNodeGraph/>\n\n## Payload example\n\n```json title=\"Payload example\"\n{\n  \"productId\": \"789e1234-b56c-78d9-e012-3456789fghij\",\n  \"quantity\": 50,\n  \"warehouseId\": \"456e7891-c23d-45f6-b78a-123456789abc\",\n  \"timestamp\": \"2024-07-04T14:48:00Z\"\n}\n\n```\n\n## Schema\n\n\u003CSchema file=\"schema.json\"/>\n\n\u003CFooter />","../domains/Orders/services/InventoryService/commands/AddInventory/index.mdx","b9077bb68ef67ff2","UpdateInventory-0.0.3",{"id":818,"data":820,"body":834,"filePath":835,"digest":836,"deferredRender":20},{"channels":821,"id":446,"name":824,"summary":825,"version":244,"badges":826,"owners":828,"schemaPath":625},[822],{"parameters":823,"id":573,"version":236},{"env":645},"Update inventory","Command that will update a given inventory item\n",[827],{"content":578,"backgroundColor":550,"textColor":550},[829,830,831,832,833],{"id":30},{"id":11},{"id":21},{"id":43},{"id":54},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe UpdateInventory command is issued to update the existing stock levels of a product in the inventory. This command is used by the inventory management system to adjust the quantity of products available in the warehouse or store, either by increasing or decreasing the current stock levels.\n\n## Architecture diagram\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />\n\n## Payload example\n\n```json title=\"Payload example\"\n{\n  \"productId\": \"789e1234-b56c-78d9-e012-3456789fghij\",\n  \"quantityChange\": -10,\n  \"warehouseId\": \"456e7891-c23d-45f6-b78a-123456789abc\",\n  \"timestamp\": \"2024-07-04T14:48:00Z\"\n}\n```\n\n## Schema (JSON schema)\n\n\u003CSchema file=\"schema.json\"/>\n\n\u003CFooter />","../domains/Orders/services/InventoryService/commands/UpdateInventory/index.mdx","e0306fa262e11cd7","PlaceOrder-0.0.1",{"id":837,"data":839,"body":851,"filePath":852,"digest":853,"deferredRender":20},{"id":840,"name":841,"summary":842,"version":219,"badges":843,"owners":845,"schemaPath":625},"PlaceOrder","Place Order","Command that will place an order\n",[844],{"content":578,"backgroundColor":550,"textColor":550},[846,847,848,849,850],{"id":30},{"id":11},{"id":21},{"id":43},{"id":54},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe Order Placement Command is a versatile and robust system designed to streamline the process of placing an order. This command takes care of all the essential details needed to complete a purchase, ensuring a smooth and efficient transaction from start to finish.\n\n## Architecture diagram\n\n\u003CNodeGraph/>\n\n## Schema\n\n\u003CSchemaViewer file=\"schema.json\"/>\n\n\u003CFooter />","../domains/Orders/services/InventoryService/commands/PlaceOrder/index.mdx","790a447f955e9bfc","CancelShipment-0.0.1",{"id":854,"data":856,"body":861,"filePath":862,"digest":863,"deferredRender":20},{"id":395,"name":857,"summary":858,"version":219,"owners":859,"schemaPath":625},"Cancel shipment","POST request that will cancel a shipment, identified by its shipmentId.\n",[860],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `CancelShipment` message is a command used to cancel a shipment, identified by its `shipmentId`. It provides information such as the shipment status (e.g., pending, completed, shipped), the items within the shipment, billing and shipping details, payment information, and the order's total amount. This query is commonly used by systems managing order processing, customer service, or order tracking functionalities.\n\nThis command can be applied in e-commerce systems, marketplaces, or any platform where users and systems need real-time shipment data for tracking, auditing, or managing customer purchases.\n\n\u003CSchemaViewer file=\"schema.json\" title=\"Schema\" maxHeight=\"500\" />\n\n\u003CNodeGraph />","../domains/Orders/services/ShippingService/commands/CancelShipment/index.mdx","521f24758708936c","CreateReturnLabel-0.0.1",{"id":864,"data":866,"body":871,"filePath":872,"digest":873,"deferredRender":20},{"id":397,"name":867,"summary":868,"version":219,"owners":869,"schemaPath":625},"Create return label","POST request that will create a return label for a specific shipment, identified by its shipmentId.\n",[870],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `CreateReturnLabel` message is a command used to create a return label for a specific shipment, identified by its `shipmentId`. It provides information such as the shipment status (e.g., pending, completed, shipped), the items within the shipment, billing and shipping details, payment information, and the order's total amount. This query is commonly used by systems managing order processing, customer service, or order tracking functionalities.\n\nThis command can be applied in e-commerce systems, marketplaces, or any platform where users and systems need real-time shipment data for tracking, auditing, or managing customer purchases.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/ShippingService/commands/CreateReturnLabel/index.mdx","31387c56ec105b30","CreateShipment-0.0.1",{"id":874,"data":876,"body":881,"filePath":882,"digest":883,"deferredRender":20},{"id":399,"name":877,"summary":878,"version":219,"owners":879,"schemaPath":625},"Create shipment","POST request that will create a shipment for a specific order, identified by its orderId.\n",[880],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `CreateShipment` message is a command used to create a shipment for a specific order, identified by its `orderId`. It provides information such as the order status (e.g., pending, completed, shipped), the items within the order, billing and shipping details, payment information, and the order's total amount. This query is commonly used by systems managing order processing, customer service, or order tracking functionalities.\n\nThis command can be applied in e-commerce systems, marketplaces, or any platform where users and systems need real-time order data for tracking, auditing, or managing customer purchases.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/ShippingService/commands/CreateShipment/index.mdx","49c76dec3fa5e223","SubscribeUser-0.0.1",{"id":884,"data":886,"body":893,"filePath":894,"digest":895,"deferredRender":20},{"id":493,"name":887,"summary":888,"version":219,"badges":889,"owners":891},"Subscribe user","Command that will try and subscribe a given user\n",[890],{"content":549,"backgroundColor":550,"textColor":550},[892],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `SubscribeUser` command represents when a new user wants to subscribe to our service.\n\n## Architecture diagram\n\n\u003CNodeGraph />\n\n\u003CFooter />","../domains/Subscriptions/services/SubscriptionService/commands/SubscribeUser/index.mdx","c6e1f9a37de3d909","CancelSubscription-0.0.1",{"id":896,"data":898,"body":905,"filePath":906,"digest":907,"deferredRender":20},{"id":495,"name":899,"summary":900,"version":219,"badges":901,"owners":903},"Cancel subscription","Command that will try and cancel a users subscription\n",[902],{"content":549,"backgroundColor":550,"textColor":550},[904],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `CancelSubscription` command will try and cancel a subscription for the user.\n\n## Architecture diagram\n\n\u003CNodeGraph />\n\n\u003CFooter />","../domains/Subscriptions/services/SubscriptionService/commands/CancelSubscription/index.mdx","5a449a01fefcf83b","UpdateShipmentStatus-0.0.1",{"id":908,"data":910,"body":915,"filePath":916,"digest":917,"deferredRender":20},{"id":401,"name":911,"summary":912,"version":219,"owners":913,"schemaPath":625},"Update shipment status","POST request that will update the status of a shipment, identified by its shipmentId.\n",[914],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `UpdateShipmentStatus` message is a command used to update the status of a shipment, identified by its `shipmentId`. It provides information such as the shipment status (e.g., pending, completed, shipped), the items within the shipment, billing and shipping details, payment information, and the order's total amount. This query is commonly used by systems managing order processing, customer service, or order tracking functionalities.\n\nThis command can be applied in e-commerce systems, marketplaces, or any platform where users and systems need real-time shipment data for tracking, auditing, or managing customer purchases.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/ShippingService/commands/UpdateShipmentStatus/index.mdx","26257f7f964302b3","queries",["Map",920,921,932,933,945,946,957,958,969,970,981,982,993,994,1005,1006],"GetUserNotifications-0.0.1",{"id":920,"data":922,"body":929,"filePath":930,"digest":931,"deferredRender":20},{"id":363,"name":923,"summary":924,"version":219,"badges":925,"owners":927,"schemaPath":625},"Get user notifications","GET request that will return a list of notifications for a specific user, with options to filter by status (unread or all).\n",[926],{"content":578,"backgroundColor":550,"textColor":550},[928],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `GetUserNotifications` message is a query used to retrieve a list of notifications for a specific user. It allows filtering by notification status, such as unread or all notifications. This query is typically utilized by notification services to display user-specific messages, such as order updates, promotional offers, or system notifications. It supports pagination through `limit` and `offset` parameters, ensuring that only a manageable number of notifications are retrieved at once. This query helps users stay informed about important events or updates related to their account, orders, or the platform.\n\nUse cases include delivering notifications for order updates, promotional campaigns, or general system messages to keep the user informed.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/NotificationService/queries/GetUserNotifications/index.mdx","5fd7b33e04fd7dd6","GetInventoryStatus-0.0.1",{"id":932,"data":934,"body":942,"filePath":943,"digest":944,"deferredRender":20},{"id":450,"name":935,"summary":936,"version":219,"badges":937,"owners":940,"schemaPath":625},"Get inventory status","GET request that will return the current stock status for a specific product.\n",[938],{"content":939,"backgroundColor":550,"textColor":550},"GET Request",[941],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe GetInventoryStatus message is a query designed to retrieve the current stock status for a specific product. \n\nThis query provides detailed information about the available quantity, reserved quantity, and the warehouse location where the product is stored. It is typically used by systems or services that need to determine the real-time availability of a product, enabling efficient stock management, order fulfillment, and inventory tracking processes. \n\nThis query is essential for ensuring accurate stock levels are reported to downstream systems, including e-commerce platforms, warehouse management systems, and sales channels.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />\n\n\n### Query using CURL\n\nUse this snippet to query the inventory status\n\n```sh title=\"Example CURL command\"\ncurl -X GET \"https://api.yourdomain.com/inventory/status\" \\\n-H \"Content-Type: application/json\" \\\n-d '{\n  \"productId\": \"12345\"\n}'\n```","../domains/Orders/services/InventoryService/queries/GetInventoryStatus/index.mdx","00eb1684c4519d03","GetNotificationDetails-0.0.1",{"id":945,"data":947,"body":954,"filePath":955,"digest":956,"deferredRender":20},{"id":366,"name":948,"summary":949,"version":219,"badges":950,"owners":952,"schemaPath":625},"Get notification details","GET request that will return detailed information about a specific notification, identified by its notificationId.\n",[951],{"content":578,"backgroundColor":550,"textColor":550},[953],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `GetNotificationDetails` message is a query used to retrieve detailed information about a specific notification identified by its `notificationId`. It provides a comprehensive overview of the notification, including the title, message content, status (read/unread), the date it was created, and any additional metadata related to the notification, such as associated orders or system events. This query is helpful in scenarios where users or systems need detailed insights into a particular notification, such as retrieving full messages or auditing notifications sent to users.\n\nUse cases include viewing detailed information about order updates, system notifications, or promotional messages, allowing users to view their full notification history and details.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/NotificationService/queries/GetNotificationDetails/index.mdx","f84128e2278e2200","GetInventoryList-0.0.1",{"id":957,"data":959,"body":966,"filePath":967,"digest":968,"deferredRender":20},{"id":353,"name":960,"summary":961,"version":219,"badges":962,"owners":964,"schemaPath":625},"List inventory list","GET request that will return inventory list\n",[963],{"content":578,"backgroundColor":550,"textColor":550},[965],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe GetInventoryList message is a query used to retrieve a comprehensive list of all available inventory items within a system. It is designed to return detailed information about each item, such as product names, quantities, availability status, and potentially additional metadata like categories or locations. This query is typically utilized by systems or services that require a real-time view of current stock, ensuring that downstream applications or users have accurate and up-to-date information for decision-making or operational purposes. The GetInventoryList is ideal for use cases such as order processing, stock management, or reporting, providing visibility into the full range of inventory data.\n\n\u003CNodeGraph />","../domains/Orders/services/InventoryService/queries/GetInventoryList/index.mdx","4517b5ebf16ef267","GetOrder-0.0.1",{"id":969,"data":971,"body":978,"filePath":979,"digest":980,"deferredRender":20},{"id":417,"name":972,"summary":973,"version":219,"badges":974,"owners":976,"schemaPath":625},"Get order details","GET request that will return detailed information about a specific order, identified by its orderId.\n",[975],{"content":578,"backgroundColor":550,"textColor":550},[977],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `GetOrder` message is a query used to retrieve detailed information about a specific order, identified by its `orderId`. It provides information such as the order status (e.g., pending, completed, shipped), the items within the order, billing and shipping details, payment information, and the order's total amount. This query is commonly used by systems managing order processing, customer service, or order tracking functionalities.\n\nThis query can be applied in e-commerce systems, marketplaces, or any platform where users and systems need real-time order data for tracking, auditing, or managing customer purchases.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Orders/services/OrdersService/queries/GetOrder/index.mdx","f85f660261e1e432","GetPaymentStatus-0.0.1",{"id":981,"data":983,"body":990,"filePath":991,"digest":992,"deferredRender":20},{"id":422,"name":984,"summary":985,"version":219,"badges":986,"owners":988,"schemaPath":625},"Get payment status","GET request that will return the payment status for a specific order, identified by its orderId.\n",[987],{"content":578,"backgroundColor":550,"textColor":550},[989],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `GetPaymentStatus` message is a query used to retrieve the payment status for a specific order, identified by its `orderId`. This query returns the current status of the payment, such as whether it is pending, completed, failed, or refunded. It is used by systems that need to track the lifecycle of payments associated with orders, ensuring that the payment has been successfully processed or identifying if any issues occurred during the transaction.\n\nThis query is useful in scenarios such as order management, refund processing, or payment auditing, ensuring that users or systems have real-time visibility into the payment status for a given order.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Payment/services/PaymentService/queries/GetPaymentStatus/index.mdx","7f44c2f302c18a44","GetSubscriptionStatus-0.0.1",{"id":993,"data":995,"body":1002,"filePath":1003,"digest":1004,"deferredRender":20},{"id":497,"name":996,"summary":997,"version":219,"badges":998,"owners":1000,"schemaPath":625},"Get subscription status","GET request that will return the current subscription status for a specific user, identified by their userId.\n",[999],{"content":578,"backgroundColor":550,"textColor":550},[1001],{"id":30},"import Footer from '@catalog/components/footer.astro';\n\n## Overview\n\nThe `GetSubscriptionStatus` message is a query used to retrieve the current subscription status for a specific user, identified by their `userId`. This query returns detailed information about the user's subscription, such as its current status (active, canceled, expired), the subscription tier or plan, and the next billing date. It is typically used by systems that manage user subscriptions, billing, and renewal processes to ensure that users are aware of their subscription details and any upcoming renewals.\n\nThis query is particularly useful in managing subscriptions for SaaS products, media services, or any recurring payment-based services where users need to manage and view their subscription information.\n\n\u003CNodeGraph />\n\n\u003CSchemaViewer file=\"schema.json\" title=\"JSON Schema\" maxHeight=\"500\" />","../domains/Subscriptions/services/SubscriptionService/queries/GetSubscriptionStatus/versioned/0.0.1/index.mdx","c1544eddb39795d7","GetSubscriptionStatus-0.0.2",{"id":1005,"data":1007,"body":1002,"filePath":1012,"digest":1013,"deferredRender":20},{"id":497,"name":996,"summary":997,"version":319,"badges":1008,"owners":1010,"schemaPath":625},[1009],{"content":578,"backgroundColor":550,"textColor":550},[1011],{"id":30},"../domains/Subscriptions/services/SubscriptionService/queries/GetSubscriptionStatus/index.mdx","4537db5fbd3e157a","channels",["Map",1016,1017,1035,1036,1049,1050],"inventory.{env}.events-1.0.0",{"id":1016,"data":1018,"body":1032,"filePath":1033,"digest":1034,"deferredRender":20},{"address":573,"protocols":1019,"parameters":1021,"id":573,"name":1028,"summary":1029,"version":287,"owners":1030},[1020],"kafka",{"env":1022},{"enum":1023,"description":1027},[1024,1025,1026],"dev","sit","prod","Environment to use","Inventory Events Channel","Central event stream for all inventory-related events including stock updates, allocations, and adjustments\n",[1031],{"id":30},"### Overview\nThe Inventory Events channel is the central stream for all inventory-related events across the system. This includes stock level changes, inventory allocations, adjustments, and stocktake events. Events for a specific SKU are guaranteed to be processed in sequence when using productId as the partition key.\n\n\u003CChannelInformation />\n\n### Publishing and Subscribing to Events\n\n#### Publishing Example\n```python\nfrom kafka import KafkaProducer\nimport json\nfrom datetime import datetime\n\n# Kafka configuration\nbootstrap_servers = ['localhost:9092']\ntopic = f'inventory.{env}.events'\n\n# Create a Kafka producer\nproducer = KafkaProducer(\n    bootstrap_servers=bootstrap_servers,\n    value_serializer=lambda v: json.dumps(v).encode('utf-8')\n)\n\n# Example inventory update event\ninventory_event = {\n    \"eventType\": \"STOCK_LEVEL_CHANGED\",\n    \"timestamp\": datetime.utcnow().isoformat(),\n    \"version\": \"1.0\",\n    \"payload\": {\n        \"productId\": \"PROD-456\",\n        \"locationId\": \"WH-123\",\n        \"previousQuantity\": 100,\n        \"newQuantity\": 95,\n        \"changeReason\": \"ORDER_FULFILLED\",\n        \"unitOfMeasure\": \"EACH\",\n        \"batchInfo\": {\n            \"batchId\": \"BATCH-789\",\n            \"expiryDate\": \"2025-12-31\"\n        }\n    },\n    \"metadata\": {\n        \"source\": \"warehouse_system\",\n        \"correlationId\": \"inv-xyz-123\",\n        \"userId\": \"john.doe\"\n    }\n}\n\n# Send the message - using productId as key for partitioning\nproducer.send(\n    topic, \n    key=inventory_event['payload']['productId'].encode('utf-8'),\n    value=inventory_event\n)\nproducer.flush()\n\nprint(f\"Inventory event sent to topic {topic}\")\n\n```\n\n### Subscription example\n\n```python\nfrom kafka import KafkaConsumer\nimport json\nfrom datetime import datetime\n\nclass InventoryEventConsumer:\n    def __init__(self):\n        # Kafka configuration\n        self.topic = f'inventory.{env}.events'\n        self.consumer = KafkaConsumer(\n            self.topic,\n            bootstrap_servers=['localhost:9092'],\n            group_id='inventory-processor-group',\n            auto_offset_reset='earliest',\n            enable_auto_commit=False,\n            value_deserializer=lambda x: json.loads(x.decode('utf-8')),\n            key_deserializer=lambda x: x.decode('utf-8') if x else None\n        )\n\n    def process_event(self, event):\n        \"\"\"Process individual inventory events based on type\"\"\"\n        event_type = event.get('eventType')\n        \n        if event_type == 'STOCK_LEVEL_CHANGED':\n            self.handle_stock_level_change(event)\n        elif event_type == 'LOW_STOCK_ALERT':\n            self.handle_low_stock_alert(event)\n        # Add more event type handlers as needed\n\n    def handle_stock_level_change(self, event):\n        \"\"\"Handle stock level change events\"\"\"\n        payload = event['payload']\n        print(f\"Stock level change detected for product {payload['productId']}\")\n        print(f\"New quantity: {payload['newQuantity']}\")\n        # Add your business logic here\n\n    def handle_low_stock_alert(self, event):\n        \"\"\"Handle low stock alert events\"\"\"\n        payload = event['payload']\n        print(f\"Low stock alert for product {payload['productId']}\")\n        print(f\"Current quantity: {payload['currentQuantity']}\")\n        # Add your business logic here\n\n    def start_consuming(self):\n        \"\"\"Start consuming messages from the topic\"\"\"\n        try:\n            print(f\"Starting consumption from topic: {self.topic}\")\n            for message in self.consumer:\n                try:\n                    # Process the message\n                    event = message.value\n                    print(f\"Received event: {event['eventType']} for product: {event['payload']['productId']}\")\n                    \n                    # Process the event\n                    self.process_event(event)\n                    \n                    # Commit the offset after successful processing\n                    self.consumer.commit()\n                    \n                except Exception as e:\n                    print(f\"Error processing message: {str(e)}\")\n                    # Implement your error handling logic here\n                    # You might want to send to a DLQ (Dead Letter Queue)\n        \n        except Exception as e:\n            print(f\"Consumer error: {str(e)}\")\n        finally:\n            # Clean up\n            self.consumer.close()\n\nif __name__ == \"__main__\":\n    # Create and start the consumer\n    consumer = InventoryEventConsumer()\n    consumer.start_consuming()\n  ```","../channels/inventory.{env}.events/index.mdx","4b30c49f113c69e3","orders.{env}.events-1.0.1",{"id":1035,"data":1037,"body":1046,"filePath":1047,"digest":1048,"deferredRender":20},{"address":616,"protocols":1038,"parameters":1039,"id":616,"name":1042,"summary":1043,"version":597,"owners":1044},[1020],{"env":1040},{"enum":1041,"description":1027},[1024,1025,1026],"Order Events Channel","Central event stream for all order-related events in the order processing lifecycle\n",[1045],{"id":30},"### Overview\nThe Orders Events channel is the central stream for all order-related events across the order processing lifecycle. This includes order creation, updates, payment status, fulfillment status, and customer communications. All events related to a specific order are guaranteed to be processed in sequence when using orderId as the partition key.\n\n\u003CChannelInformation />\n\n### Publishing a message using Kafka\n\nHere is an example of how to publish an order event using Kafka:\n\n```python\nfrom kafka import KafkaProducer\nimport json\nfrom datetime import datetime\n\n# Kafka configuration\nbootstrap_servers = ['localhost:9092']\ntopic = f'orders.{env}.events'\n\n# Create a Kafka producer\nproducer = KafkaProducer(\n    bootstrap_servers=bootstrap_servers,\n    value_serializer=lambda v: json.dumps(v).encode('utf-8')\n)\n\n# Example order created event\norder_event = {\n    \"eventType\": \"ORDER_CREATED\",\n    \"timestamp\": datetime.utcnow().isoformat(),\n    \"version\": \"1.0\",\n    \"payload\": {\n        \"orderId\": \"12345\",\n        \"customerId\": \"CUST-789\",\n        \"items\": [\n            {\n                \"productId\": \"PROD-456\",\n                \"quantity\": 2,\n                \"price\": 29.99\n            }\n        ],\n        \"totalAmount\": 59.98,\n        \"shippingAddress\": {\n            \"street\": \"123 Main St\",\n            \"city\": \"Springfield\",\n            \"country\": \"US\"\n        }\n    },\n    \"metadata\": {\n        \"source\": \"web_checkout\",\n        \"correlationId\": \"abc-xyz-123\"\n    }\n}\n\n# Send the message - using orderId as key for partitioning\nproducer.send(\n    topic, \n    key=order_event['payload']['orderId'].encode('utf-8'),\n    value=order_event\n)\nproducer.flush()\n\nprint(f\"Order event sent to topic {topic}\")","../channels/orders.{env}.events/index.mdx","a820b5b1ea48c221","payments.{env}.events-1.0.0",{"id":1049,"data":1051,"body":1061,"filePath":1062,"digest":1063,"deferredRender":20},{"address":719,"protocols":1052,"parameters":1053,"id":719,"name":1057,"summary":1058,"version":287,"owners":1059},[1020],{"env":1054},{"enum":1055,"description":1056},[1024,1025,1026],"Environment to use for payment events","Payment Events Channel","All events contain payment ID for traceability and ordered processing.\n",[1060],{"id":30},"### Overview\nThe Payments Events channel is the central stream for all payment lifecycle events. This includes payment initiation, authorization, capture, completion and failure scenarios. Events for a specific payment are guaranteed to be processed in sequence when using paymentId as the partition key.\n\n\u003CChannelInformation />\n\n### Publishing Events Using Kafka\n\nHere's an example of publishing a payment event:\n\n```python\nfrom kafka import KafkaProducer\nimport json\nfrom datetime import datetime\n\n# Kafka configuration\nbootstrap_servers = ['localhost:9092']\ntopic = f'payments.{env}.events'\n\n# Create Kafka producer\nproducer = KafkaProducer(\n   bootstrap_servers=bootstrap_servers,\n   value_serializer=lambda v: json.dumps(v).encode('utf-8')\n)\n\n# Example payment processed event\npayment_event = {\n   \"eventType\": \"PAYMENT_PROCESSED\",\n   \"timestamp\": datetime.utcnow().isoformat(),\n   \"version\": \"1.0\",\n   \"payload\": {\n       \"paymentId\": \"PAY-123-456\", \n       \"orderId\": \"ORD-789\",\n       \"amount\": {\n           \"value\": 99.99,\n           \"currency\": \"USD\"\n       },\n       \"status\": \"SUCCESS\",\n       \"paymentMethod\": {\n           \"type\": \"CREDIT_CARD\",\n           \"last4\": \"4242\",\n           \"expiryMonth\": \"12\",\n           \"expiryYear\": \"2025\",\n           \"network\": \"VISA\"\n       },\n       \"transactionDetails\": {\n           \"processorId\": \"stripe_123xyz\",\n           \"authorizationCode\": \"AUTH123\",\n           \"captureId\": \"CAP456\"\n       }\n   },\n   \"metadata\": {\n       \"correlationId\": \"corr-123-abc\",\n       \"merchantId\": \"MERCH-456\", \n       \"source\": \"payment_service\",\n       \"environment\": \"prod\",\n       \"idempotencyKey\": \"PAY-123-456-2024-11-11-99.99\"\n   }\n}\n\n# Send message - using paymentId as key for partitioning\nproducer.send(\n   topic,\n   key=payment_event['payload']['paymentId'].encode('utf-8'),\n   value=payment_event\n)\nproducer.flush()\n```","../channels/payment.{env}.events/index.mdx","261c4005551cac3f","flows",["Map",1066,1067,1134,1135,896,1188],"PaymentFlow-1.0.0",{"id":1066,"data":1068,"body":1131,"filePath":1132,"digest":1133,"deferredRender":20},{"steps":1069,"id":1128,"name":1129,"summary":1130,"version":287},[1070,1074,1080,1085,1094,1104,1110,1113,1115,1119,1126],{"id":1071,"title":1072,"next_step":1073},"customer_place_order","Customer places order","place_order_request",{"id":1073,"title":1075,"message":1076,"next_step":1077},"Place order",{"id":840,"version":219},{"id":1078,"label":1079},"payment_initiated","Initiate payment",{"id":1078,"title":720,"message":1081,"next_steps":1082},{"id":420,"version":219},[1083,1084],"payment_processed","payment_failed",{"id":1083,"title":753,"message":1086,"next_steps":1087},{"id":360,"version":219},[1088,1091],{"id":1089,"label":1090},"adjust_inventory","Adjust inventory",{"id":1092,"label":1093},"send_custom_notification","Notify customer",{"id":1084,"type":1095,"title":1096,"next_steps":1097},"node","Payment Failed",[1098,1101],{"id":1099,"label":1100},"failure_notification","Notify customer of failure",{"id":1102,"label":1103},"retry_payment","Retry payment",{"id":1089,"title":1105,"message":1106,"next_step":1107},"Inventory Adjusted",{"id":357,"version":597},{"id":1108,"label":1109},"payment_complete","Complete order",{"id":1092,"type":1095,"title":1111,"next_step":1112},"Customer Notified of Payment",{"id":1108,"label":1109},{"id":1099,"type":1095,"title":1114},"Customer Notified of Failure",{"id":1102,"type":1095,"title":1116,"next_step":1117},"Retry Payment",{"id":1078,"label":1118},"Retry payment process",{"id":1108,"title":1120,"message":1121,"next_step":1123},"Payment Complete",{"id":1122,"version":319},"PaymentComplete",{"id":1124,"label":1125},"order-complete","Order completed",{"id":1124,"type":1095,"title":1127},"Order Completed","PaymentFlow","Payment Flow for customers","Business flow for processing payments in an e-commerce platform","### Flow of feature\n\u003CNodeGraph/>","../domains/Payment/flows/PaymentProcessed/index.mdx","95c412d7285f3454","CancelSubscription-1.0.0",{"id":1134,"data":1136,"body":1185,"filePath":1186,"digest":1187,"deferredRender":20},{"steps":1137,"id":495,"name":1183,"summary":1184,"version":287},[1138,1147,1153,1161,1172,1178,1180],{"id":1139,"title":1140,"summary":1141,"actor":1142,"next_step":1144},"cancel_subscription_initiated","Cancels Subscription","User cancels their subscription",{"name":1143},"User",{"id":1145,"label":1146},"cancel_subscription_request","Initiate subscription cancellation",{"id":1145,"title":1148,"message":1149,"next_step":1150},"Cancel Subscription",{"id":495,"version":219},{"id":1151,"label":1152},"subscription_service","Proceed to subscription service",{"id":1154,"title":1155,"externalSystem":1156,"next_step":1159},"stripe_integration","Stripe",{"name":1155,"summary":1157,"url":1158},"3rd party payment system","https://stripe.com/",{"id":1151,"label":1160},"Return to subscription service",{"id":1151,"title":498,"service":1162,"next_steps":1163},{"id":271,"version":219},[1164,1166,1169],{"id":1154,"label":1165},"Cancel subscription via Stripe",{"id":1167,"label":1168},"subscription_cancelled","Successful cancellation",{"id":1170,"label":1171},"subscription_rejected","Failed cancellation",{"id":1167,"title":1173,"message":1174,"next_step":1175},"Subscription has been Cancelled",{"id":490,"version":219},{"id":1176,"label":1177},"notification_service","Email customer",{"id":1170,"title":1179},"Subscription cancellation has been rejected",{"id":1176,"title":1181,"service":1182},"Notifications Service",{"id":240,"version":319},"User Cancels Subscription","Flow for when a user has cancelled a subscription","\u003CNodeGraph />","../domains/Subscriptions/flows/CancelSubscription/index.mdx","73b9b22ad5e10d05",{"id":896,"data":1189,"body":1185,"filePath":1206,"digest":1207,"deferredRender":20},{"steps":1190,"id":495,"name":1183,"summary":1184,"version":219},[1191,1194,1197,1200],{"id":1139,"title":1140,"summary":1141,"actor":1192,"next_step":1193},{"name":1143},{"id":1145,"label":1146},{"id":1145,"title":1148,"message":1195,"next_step":1196},{"id":495,"version":219},{"id":1151,"label":1152},{"id":1154,"title":1155,"externalSystem":1198,"next_step":1199},{"name":1155,"summary":1157,"url":1158},{"id":1151,"label":1160},{"id":1151,"title":498,"service":1201,"next_steps":1202},{"id":271,"version":219},[1203,1204,1205],{"id":1154,"label":1165},{"id":1167,"label":1168},{"id":1170,"label":1171},"../domains/Subscriptions/flows/CancelSubscription/versioned/0.0.1/index.mdx","70cfaf60e29b321a","changelogs",["Map",1210,1211,1217,1218,1224,1225,1242,1243,1248,1249,1253,1254,1379,1380,1390,1391,1401,1402],"domains/orders/changelog",{"id":1210,"data":1212,"body":1214,"filePath":1215,"digest":1216,"deferredRender":20},{"createdAt":1213},["Date","2024-08-01T00:00:00.000Z"],"### Service added to domain\n\nAdded the InventoryService to the domain.","../domains/Orders/changelog.mdx","1701b81cd5272d6f","domains/orders/services/inventoryservice/changelog",{"id":1217,"data":1219,"body":1221,"filePath":1222,"digest":1223,"deferredRender":20},{"createdAt":1220},["Date","2024-08-01T00:00:00.000Z"],"### Service receives additional events\n\nService now receives [OrderAmended](/docs/events/OrderAmended/0.0.1) and [UpdateInventory](/docs/commands/UpdateInventory/0.0.3) events.","../domains/Orders/services/InventoryService/changelog.mdx","fcad7e1186da61fc","node_modules/zod-to-json-schema/changelog",{"id":1224,"data":1226,"body":1227,"filePath":1228,"digest":1229,"rendered":1230},{},"# Changelog\n\n| Version         | Change                                                                                                                                                                                                                                                                                                                                                                 |\n| --------------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| 3.24.5          | Update .npmignore to drop 2 mb of test files. Thanks [Misha Kaletsky](https://github.com/mmkal)!                                                                                                                                                                                                                                                                       |\n| 3.24.4          | Added options to set the value of additionalProperties in objects and record                                                                                                                                                                                                                                                                                           |\n| 3.24.3          | Adds postProcess callback option                                                                                                                                                                                                                                                                                                                                       |\n| 3.24.2          | Restructured internals to remove circular dependencies which apparently might cause some build systems to whine a bit. Big thanks to [Víctor Hernández](https://github.com/NanezX) for the fix.                                                                                                                                                                        |\n| 3.24.1          | Adds OpenAI target                                                                                                                                                                                                                                                                                                                                                     |\n| 3.24.0          | Implements new string checks (jwt, base64url, cidr ipv4/v6), matching the new Zod version                                                                                                                                                                                                                                                                              |\n| 3.23.5          | Module import hotfix by [Enzo Monjardín](https://github.com/enzomonjardin). Thanks!                                                                                                                                                                                                                                                                                    |\n| 3.23.4          | Fixes branded regex property names and a weird edgecase in arrays. Thanks to [Isaiah Marc Sanchez](https://github.com/imsanchez) and [Mitchell Merry](https://github.com/mitchell-merry)!                                                                                                                                                                              |\n| 3.23.3          | More tests (Thanks [Brett Zamir!](https://github.com/brettz9)), removed dead code                                                                                                                                                                                                                                                                                      |\n| 3.23.2          | Lazily loads Emoji regex to avoid incompatibility with some environments. Thanks [Jacob Lee](https://github.com/jacoblee93)!                                                                                                                                                                                                                                           |\n| 3.23.1          | Best-effort RegEx flag support by [Spappz](https://github.com/Spappz)! Some minor fixes and additions, such as the title option.                                                                                                                                                                                                                                       |\n| 3.23.0          | Adds support for base64, date, time, duration and nanoid string validations. A warm welcome and a big thanks to [Colin](https://www.github.com/colinhacks), the creator of Zod, joining in as a contributor :)                                                                                                                                                         |\n| 3.22.5          | Adds new z.date() parsing options and override callback                                                                                                                                                                                                                                                                                                                |\n| 3.22.4          | Adds fix for nullable references in OpenAPI mode                                                                                                                                                                                                                                                                                                                       |\n| 3.22.3          | Adjust root path from \"#/\" to \"#\" according to RFC 6901                                                                                                                                                                                                                                                                                                                |\n| 3.22.2          | Adds \"output\" pipe strategy                                                                                                                                                                                                                                                                                                                                            |\n| 3.22.1          | Fixes broken imports when using some bundlers                                                                                                                                                                                                                                                                                                                          |\n| 3.22.0          | Support readonly. Export both CJS and ESM. Export everything from index. Alternative map parser. Improved pattern handling and updated sources.                                                                                                                                                                                                                        |\n| 3.21.4          | Fixes missing support for exact array length                                                                                                                                                                                                                                                                                                                           |\n| 3.21.3          | Fixes issue #77 (Reference path to nullable schemas in Open-API mode)                                                                                                                                                                                                                                                                                                  |\n| 3.21.2          | Adds \"integer\" type Date output to support min/max checks, markdownDescription option, fixes \"none\" refStrategy by adding \"seen\" and adds an option to use \"pattern\" with Zods' email enum instead of \"format\".                                                                                                                                                        |\n| 3.21.1          | New target (2019-09) along with improved intersection schemas, improved mutual recursion references in definitions, descriptions respected in union parser and not removed in collapsed                                                                                                                                                                                |\n| 3.21.0          | Added new string validations (ip, emoji, etc) and BigInt checks to support Zod 3.21                                                                                                                                                                                                                                                                                    |\n| 3.20.5          | Added uniqueItems to Set and an option to disregard pipe schemas                                                                                                                                                                                                                                                                                                       |\n| 3.20.4          | Bugfixes and improved record parsing for openApi3                                                                                                                                                                                                                                                                                                                      |\n| 3.20.3          | Added Cuid2 support introduced in Zod 3.20.3                                                                                                                                                                                                                                                                                                                           |\n| 3.20.2          | Reintroduced conditional simplified return-type for when target is OpenAPI 3                                                                                                                                                                                                                                                                                           |\n| 3.20.1          | Fixed inconsistent casing in imports                                                                                                                                                                                                                                                                                                                                   |\n| 3.20.0          | Adds support for Zod 3.20 with catch and pipe parser as well as new string validations. Refactored Ref handling; adding definitions no longer considered experimental. Main API function refactored and simplified; output type less defined but a lot easier to maintain. Doubt anyone will miss it. \u003Cbr/>\u003Cquote>\u003Ci>Narrator: Someone did in fact miss it\u003C/i>\u003C/quote> |\n| 3.19.4          | Adds custom error message support                                                                                                                                                                                                                                                                                                                                      |\n| 3.19.3          | Mark `definitions` as experimental in the readme                                                                                                                                                                                                                                                                                                                       |\n| 3.19.2          | Added `definitions` option                                                                                                                                                                                                                                                                                                                                             |\n| 3.19.1          | Strict unions fix                                                                                                                                                                                                                                                                                                                                                      |\n| 3.19.0          | No new features added in Zod, parity bump                                                                                                                                                                                                                                                                                                                              |\n| 3.18.2          | Fixes support for native enums                                                                                                                                                                                                                                                                                                                                         |\n| 3.18.1          | Add strictUnions options                                                                                                                                                                                                                                                                                                                                               |\n| 3.18.0          | Added support for branded types                                                                                                                                                                                                                                                                                                                                        |\n| 3.17.2          | Fix for reference paths when supplying name option string.                                                                                                                                                                                                                                                                                                             |\n| 3.17.1          | Added startsWith and endsWith string checks. Merge multiple pattern checks into allOf array.                                                                                                                                                                                                                                                                           |\n| 3.17.0          | Added switch case handler for new trim \"check\". No changes to functionality.                                                                                                                                                                                                                                                                                           |\n| 3.15.x - 3.16.x | Skipped: Did not change the Zod API in any way relevant for this package.                                                                                                                                                                                                                                                                                              |\n| 3.14.1          | Dependabot security updates                                                                                                                                                                                                                                                                                                                                            |\n| 3.14.0          | Moves Zod into peerDependencies. Supports checks for sets, NaN-type (sort of), discriminated union type and standalone optional properties (as unions with undefined)                                                                                                                                                                                                  |\n| 3.12.x - 3.13.x | Skipped                                                                                                                                                                                                                                                                                                                                                                |\n| 3.11.3          | Joins unions of enums into single enum and allows enums as keys of records                                                                                                                                                                                                                                                                                             |\n| 3.11.2          | Adds option to target Open API 3 spec (paths) instead of Json Schema 7.                                                                                                                                                                                                                                                                                                |\n| 3.11.1          | Performance boost when using $refStrategy `none` and internal improvements.                                                                                                                                                                                                                                                                                            |\n| 3.11.0          | Added description support introduced in Zod 3.11.5                                                                                                                                                                                                                                                                                                                     |\n| 3.10.x          | Skipped: Minor 10 did not change the Zod API                                                                                                                                                                                                                                                                                                                           |\n| 3.9.5           | Type bug fix: used dev dependency types in package                                                                                                                                                                                                                                                                                                                     |\n| 3.9.4           | Path bug fix and test case when using optional definitions path                                                                                                                                                                                                                                                                                                        |\n| 3.9.3           | Added option to change definition property name to $defs                                                                                                                                                                                                                                                                                                               |\n| 3.9.2           | Added option to handle transform results as any instead of relying on their input schema.                                                                                                                                                                                                                                                                              |\n| 3.9.1           | Refactored the way reference pointers are passed around and added options pattern to main function without braking backwards compatibility! You can now add a base path, change the reference strategy (or opt out), and still set the schema name inside the options object or outside as before.                                                                     |\n| 3.9.0           | Added support for multipleOf number validaion, .rest() schemas for tuples and key validation for records (only compatible with string keys due to JSON Schema limitation).                                                                                                                                                                                             |\n| 3.7.x - 3.8.x   | Skipped to reach functional parity with Zod versioning.                                                                                                                                                                                                                                                                                                                |\n| 3.6.1           | Realised intersection had another potential ref pathing bug. Fixed.                                                                                                                                                                                                                                                                                                    |\n| 3.6.0           | Added support for default & effects (refine). Broke out changelog.md                                                                                                                                                                                                                                                                                                   |\n| 3.5.0           | Added support for CUID string validation                                                                                                                                                                                                                                                                                                                               |\n| 3.4.3           | Fixed $ref pathing for catchall and intersection. Additional tests and code structure fixes.                                                                                                                                                                                                                                                                           |\n| 3.4.2           | Fixed broken intersection parser (Thanks [Noah2610](https://github.com/Noah2610)!)                                                                                                                                                                                                                                                                                     |\n| 3.4.1           | Fixed pathing bug for nullable items.                                                                                                                                                                                                                                                                                                                                  |\n| 3.4.0           | Added support for z.lazy()                                                                                                                                                                                                                                                                                                                                             |\n| 3.3.0           | Added support for catchall (additionalProperties schema on objects). Rebuilt object parser.                                                                                                                                                                                                                                                                            |\n| 3.2.0           | Added support for Map and Set as seen by their most common JSON definitions. Beware no standardized definition seem to exist and JSON.parse doesn't handle either natively. Their implementations here are based on the spread approach. Also further simplified intersection definition to just allOf.                                                                |\n| 3.1.0           | String patterns finally supported! Fixed bugs include broken external type, unsafe nullable parsing, bad intersection implementation, and missing support for passthrough keys in objects.                                                                                                                                                                             |\n| 3.0.3           | Fixed array deep pathing bug (path contained `array` instead of `items`)                                                                                                                                                                                                                                                                                               |\n| 3.0.2           | Fixed broken type usage (NonEmptyArrayDefinition was removed from Zod)                                                                                                                                                                                                                                                                                                 |\n| 3.0.1           | Fixed a typo in the readme                                                                                                                                                                                                                                                                                                                                             |\n| 3.0.0           | Compatible with Zod 3.2.0. Huge props to [Mr Hammad Asif](https://github.com/mrhammadasif) for his work on this.                                                                                                                                                                                                                                                       |\n| 0.6.2           | Hotfix for undefined object properties. Could crash the parser when using Pick                                                                                                                                                                                                                                                                                         |\n| 0.6.1           | Fixed bug in union pathing. `$Ref` was missing `/anyOf`                                                                                                                                                                                                                                                                                                                |\n| 0.6.0           | Moved `@types/json-schema` and `typescript` to dev dependencies. `@types/json-schema` is now only used for the test suites. Using `strict: true` in ts config.                                                                                                                                                                                                         |\n| 0.5.1           | First working release with all relevant Zod types present with most validations (except for string patterns due to Zod not exposing the source regexp pattern for those).                                                                                                                                                                                              |\n| \u003C 0.5.1         | Deprecated due to broken package structure. Please be patient, I eat crayons.                                                                                                                                                                                                                                                                                          |","../node_modules/zod-to-json-schema/changelog.md","92861162d7d92f2b",{"html":1231,"metadata":1232},"\u003Ch1 id=\"changelog\">Changelog\u003C/h1>\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\u003Ctable>\u003Cthead>\u003Ctr>\u003Cth>Version\u003C/th>\u003Cth>Change\u003C/th>\u003C/tr>\u003C/thead>\u003Ctbody>\u003Ctr>\u003Ctd>3.24.5\u003C/td>\u003Ctd>Update .npmignore to drop 2 mb of test files. Thanks \u003Ca href=\"https://github.com/mmkal\">Misha Kaletsky\u003C/a>!\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.24.4\u003C/td>\u003Ctd>Added options to set the value of additionalProperties in objects and record\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.24.3\u003C/td>\u003Ctd>Adds postProcess callback option\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.24.2\u003C/td>\u003Ctd>Restructured internals to remove circular dependencies which apparently might cause some build systems to whine a bit. Big thanks to \u003Ca href=\"https://github.com/NanezX\">Víctor Hernández\u003C/a> for the fix.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.24.1\u003C/td>\u003Ctd>Adds OpenAI target\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.24.0\u003C/td>\u003Ctd>Implements new string checks (jwt, base64url, cidr ipv4/v6), matching the new Zod version\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.23.5\u003C/td>\u003Ctd>Module import hotfix by \u003Ca href=\"https://github.com/enzomonjardin\">Enzo Monjardín\u003C/a>. Thanks!\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.23.4\u003C/td>\u003Ctd>Fixes branded regex property names and a weird edgecase in arrays. Thanks to \u003Ca href=\"https://github.com/imsanchez\">Isaiah Marc Sanchez\u003C/a> and \u003Ca href=\"https://github.com/mitchell-merry\">Mitchell Merry\u003C/a>!\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.23.3\u003C/td>\u003Ctd>More tests (Thanks \u003Ca href=\"https://github.com/brettz9\">Brett Zamir!\u003C/a>), removed dead code\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.23.2\u003C/td>\u003Ctd>Lazily loads Emoji regex to avoid incompatibility with some environments. Thanks \u003Ca href=\"https://github.com/jacoblee93\">Jacob Lee\u003C/a>!\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.23.1\u003C/td>\u003Ctd>Best-effort RegEx flag support by \u003Ca href=\"https://github.com/Spappz\">Spappz\u003C/a>! Some minor fixes and additions, such as the title option.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.23.0\u003C/td>\u003Ctd>Adds support for base64, date, time, duration and nanoid string validations. A warm welcome and a big thanks to \u003Ca href=\"https://www.github.com/colinhacks\">Colin\u003C/a>, the creator of Zod, joining in as a contributor :)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.22.5\u003C/td>\u003Ctd>Adds new z.date() parsing options and override callback\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.22.4\u003C/td>\u003Ctd>Adds fix for nullable references in OpenAPI mode\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.22.3\u003C/td>\u003Ctd>Adjust root path from ”#/” to ”#” according to RFC 6901\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.22.2\u003C/td>\u003Ctd>Adds “output” pipe strategy\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.22.1\u003C/td>\u003Ctd>Fixes broken imports when using some bundlers\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.22.0\u003C/td>\u003Ctd>Support readonly. Export both CJS and ESM. Export everything from index. Alternative map parser. Improved pattern handling and updated sources.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.21.4\u003C/td>\u003Ctd>Fixes missing support for exact array length\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.21.3\u003C/td>\u003Ctd>Fixes issue #77 (Reference path to nullable schemas in Open-API mode)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.21.2\u003C/td>\u003Ctd>Adds “integer” type Date output to support min/max checks, markdownDescription option, fixes “none” refStrategy by adding “seen” and adds an option to use “pattern” with Zods’ email enum instead of “format”.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.21.1\u003C/td>\u003Ctd>New target (2019-09) along with improved intersection schemas, improved mutual recursion references in definitions, descriptions respected in union parser and not removed in collapsed\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.21.0\u003C/td>\u003Ctd>Added new string validations (ip, emoji, etc) and BigInt checks to support Zod 3.21\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.20.5\u003C/td>\u003Ctd>Added uniqueItems to Set and an option to disregard pipe schemas\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.20.4\u003C/td>\u003Ctd>Bugfixes and improved record parsing for openApi3\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.20.3\u003C/td>\u003Ctd>Added Cuid2 support introduced in Zod 3.20.3\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.20.2\u003C/td>\u003Ctd>Reintroduced conditional simplified return-type for when target is OpenAPI 3\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.20.1\u003C/td>\u003Ctd>Fixed inconsistent casing in imports\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.20.0\u003C/td>\u003Ctd>Adds support for Zod 3.20 with catch and pipe parser as well as new string validations. Refactored Ref handling; adding definitions no longer considered experimental. Main API function refactored and simplified; output type less defined but a lot easier to maintain. Doubt anyone will miss it. \u003Cbr>\u003Cquote>\u003Ci>Narrator: Someone did in fact miss it\u003C/i>\u003C/quote>\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.19.4\u003C/td>\u003Ctd>Adds custom error message support\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.19.3\u003C/td>\u003Ctd>Mark \u003Ccode>definitions\u003C/code> as experimental in the readme\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.19.2\u003C/td>\u003Ctd>Added \u003Ccode>definitions\u003C/code> option\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.19.1\u003C/td>\u003Ctd>Strict unions fix\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.19.0\u003C/td>\u003Ctd>No new features added in Zod, parity bump\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.18.2\u003C/td>\u003Ctd>Fixes support for native enums\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.18.1\u003C/td>\u003Ctd>Add strictUnions options\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.18.0\u003C/td>\u003Ctd>Added support for branded types\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.17.2\u003C/td>\u003Ctd>Fix for reference paths when supplying name option string.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.17.1\u003C/td>\u003Ctd>Added startsWith and endsWith string checks. Merge multiple pattern checks into allOf array.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.17.0\u003C/td>\u003Ctd>Added switch case handler for new trim “check”. No changes to functionality.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.15.x - 3.16.x\u003C/td>\u003Ctd>Skipped: Did not change the Zod API in any way relevant for this package.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.14.1\u003C/td>\u003Ctd>Dependabot security updates\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.14.0\u003C/td>\u003Ctd>Moves Zod into peerDependencies. Supports checks for sets, NaN-type (sort of), discriminated union type and standalone optional properties (as unions with undefined)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.12.x - 3.13.x\u003C/td>\u003Ctd>Skipped\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.11.3\u003C/td>\u003Ctd>Joins unions of enums into single enum and allows enums as keys of records\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.11.2\u003C/td>\u003Ctd>Adds option to target Open API 3 spec (paths) instead of Json Schema 7.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.11.1\u003C/td>\u003Ctd>Performance boost when using $refStrategy \u003Ccode>none\u003C/code> and internal improvements.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.11.0\u003C/td>\u003Ctd>Added description support introduced in Zod 3.11.5\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.10.x\u003C/td>\u003Ctd>Skipped: Minor 10 did not change the Zod API\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.9.5\u003C/td>\u003Ctd>Type bug fix: used dev dependency types in package\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.9.4\u003C/td>\u003Ctd>Path bug fix and test case when using optional definitions path\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.9.3\u003C/td>\u003Ctd>Added option to change definition property name to $defs\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.9.2\u003C/td>\u003Ctd>Added option to handle transform results as any instead of relying on their input schema.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.9.1\u003C/td>\u003Ctd>Refactored the way reference pointers are passed around and added options pattern to main function without braking backwards compatibility! You can now add a base path, change the reference strategy (or opt out), and still set the schema name inside the options object or outside as before.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.9.0\u003C/td>\u003Ctd>Added support for multipleOf number validaion, .rest() schemas for tuples and key validation for records (only compatible with string keys due to JSON Schema limitation).\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.7.x - 3.8.x\u003C/td>\u003Ctd>Skipped to reach functional parity with Zod versioning.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.6.1\u003C/td>\u003Ctd>Realised intersection had another potential ref pathing bug. Fixed.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.6.0\u003C/td>\u003Ctd>Added support for default &#x26; effects (refine). Broke out changelog.md\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.5.0\u003C/td>\u003Ctd>Added support for CUID string validation\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.4.3\u003C/td>\u003Ctd>Fixed $ref pathing for catchall and intersection. Additional tests and code structure fixes.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.4.2\u003C/td>\u003Ctd>Fixed broken intersection parser (Thanks \u003Ca href=\"https://github.com/Noah2610\">Noah2610\u003C/a>!)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.4.1\u003C/td>\u003Ctd>Fixed pathing bug for nullable items.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.4.0\u003C/td>\u003Ctd>Added support for z.lazy()\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.3.0\u003C/td>\u003Ctd>Added support for catchall (additionalProperties schema on objects). Rebuilt object parser.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.2.0\u003C/td>\u003Ctd>Added support for Map and Set as seen by their most common JSON definitions. Beware no standardized definition seem to exist and JSON.parse doesn’t handle either natively. Their implementations here are based on the spread approach. Also further simplified intersection definition to just allOf.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.1.0\u003C/td>\u003Ctd>String patterns finally supported! Fixed bugs include broken external type, unsafe nullable parsing, bad intersection implementation, and missing support for passthrough keys in objects.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.0.3\u003C/td>\u003Ctd>Fixed array deep pathing bug (path contained \u003Ccode>array\u003C/code> instead of \u003Ccode>items\u003C/code>)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.0.2\u003C/td>\u003Ctd>Fixed broken type usage (NonEmptyArrayDefinition was removed from Zod)\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.0.1\u003C/td>\u003Ctd>Fixed a typo in the readme\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>3.0.0\u003C/td>\u003Ctd>Compatible with Zod 3.2.0. Huge props to \u003Ca href=\"https://github.com/mrhammadasif\">Mr Hammad Asif\u003C/a> for his work on this.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>0.6.2\u003C/td>\u003Ctd>Hotfix for undefined object properties. Could crash the parser when using Pick\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>0.6.1\u003C/td>\u003Ctd>Fixed bug in union pathing. \u003Ccode>$Ref\u003C/code> was missing \u003Ccode>/anyOf\u003C/code>\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>0.6.0\u003C/td>\u003Ctd>Moved \u003Ccode>@types/json-schema\u003C/code> and \u003Ccode>typescript\u003C/code> to dev dependencies. \u003Ccode>@types/json-schema\u003C/code> is now only used for the test suites. Using \u003Ccode>strict: true\u003C/code> in ts config.\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>0.5.1\u003C/td>\u003Ctd>First working release with all relevant Zod types present with most validations (except for string patterns due to Zod not exposing the source regexp pattern for those).\u003C/td>\u003C/tr>\u003Ctr>\u003Ctd>&#x3C; 0.5.1\u003C/td>\u003Ctd>Deprecated due to broken package structure. Please be patient, I eat crayons.\u003C/td>\u003C/tr>\u003C/tbody>\u003C/table>",{"headings":1233,"localImagePaths":1238,"remoteImagePaths":1239,"frontmatter":1240,"imagePaths":1241},[1234],{"depth":1235,"slug":1236,"text":1237},1,"changelog","Changelog",[],[],{},[],"domains/orders/services/ordersservice/changelog",{"id":1242,"data":1244,"filePath":1246,"digest":1247,"deferredRender":20},{"createdAt":1245},["Date","2024-08-01T00:00:00.000Z"],"../domains/Orders/services/OrdersService/changelog.mdx","4eed21baa2f1b51c","domains/orders/services/ordersservice/versioned/002/changelog",{"id":1248,"data":1250,"filePath":1252,"digest":1247,"deferredRender":20},{"createdAt":1251},["Date","2024-08-01T00:00:00.000Z"],"../domains/Orders/services/OrdersService/versioned/0.0.2/changelog.mdx","node_modules/deepmerge/changelog",{"id":1253,"data":1255,"body":1256,"filePath":1257,"digest":1258,"rendered":1259},{},"# [4.3.1](https://github.com/TehShrike/deepmerge/releases/tag/v4.3.1)\n\n- Fix type definition for arrayMerge options.  [#239](https://github.com/TehShrike/deepmerge/pull/239)\n\n# [4.3.0](https://github.com/TehShrike/deepmerge/releases/tag/v4.3.0)\n\n- Avoid thrown errors if the target doesn't have `propertyIsEnumerable`.  [#252](https://github.com/TehShrike/deepmerge/pull/252)\n\n# [4.2.2](https://github.com/TehShrike/deepmerge/releases/tag/v4.2.2)\n\n- `isMergeableObject` is now only called if there are two values that could be merged.  [a34dd4d2](https://github.com/TehShrike/deepmerge/commit/a34dd4d25bf5e250653540a2022bc832c7b00a19)\n\n# [4.2.1](https://github.com/TehShrike/deepmerge/releases/tag/v4.2.1)\n\n- Fix: falsey values can now be merged.  [#170](https://github.com/TehShrike/deepmerge/issues/170)\n\n# [4.2.0](https://github.com/TehShrike/deepmerge/releases/tag/v4.2.0)\n\n- Properties are now only overwritten if they exist on the target object and are enumerable.  [#164](https://github.com/TehShrike/deepmerge/pull/164)\n\nTechnically this could probably be a patch release since \"which properties get overwritten\" wasn't documented and accidentally overwriting a built-in function or some function up the property chain would almost certainly be undesirable, but it feels like a gray area, so here we are with a feature version bump.\n\n# [4.1.2](https://github.com/TehShrike/deepmerge/releases/tag/v4.1.2)\n\n- Rolled back #167 since `Object.assign` breaks ES5 support.  [55067352](https://github.com/TehShrike/deepmerge/commit/55067352a92c65a6c44a5165f3387720aae1e192)\n\n# [4.1.1](https://github.com/TehShrike/deepmerge/releases/tag/v4.1.1)\n\n- The `options` argument is no longer mutated [#167](https://github.com/TehShrike/deepmerge/pull/167)\n\n# [4.1.0](https://github.com/TehShrike/deepmerge/releases/tag/v4.1.0)\n\n- `cloneUnlessOtherwiseSpecified` is now exposed to the `arrayMerge` function [#165](https://github.com/TehShrike/deepmerge/pull/165)\n\n# [4.0.0](https://github.com/TehShrike/deepmerge/releases/tag/v4.0.0)\n\n- The `main` entry point in `package.json` is now a CommonJS module instead of a UMD module [#155](https://github.com/TehShrike/deepmerge/pull/155)\n\n# [3.3.0](https://github.com/TehShrike/deepmerge/releases/tag/v3.3.0)\n\n- Enumerable Symbol properties are now copied [#151](https://github.com/TehShrike/deepmerge/pull/151)\n\n# [3.2.1](https://github.com/TehShrike/deepmerge/releases/tag/v3.2.1)\n\n- bumping dev dependency versions to try to shut up bogus security warnings from Github/npm [#149](https://github.com/TehShrike/deepmerge/pull/149)\n\n# [3.2.0](https://github.com/TehShrike/deepmerge/releases/tag/v3.2.0)\n\n- feature: added the [`customMerge`](https://github.com/TehShrike/deepmerge#custommerge) option [#133](https://github.com/TehShrike/deepmerge/pull/133)\n\n# [3.1.0](https://github.com/TehShrike/deepmerge/releases/tag/v3.1.0)\n\n- typescript typing: make the `all` function generic [#129](https://github.com/TehShrike/deepmerge/pull/129)\n\n# [3.0.0](https://github.com/TehShrike/deepmerge/releases/tag/v3.0.0)\n\n- drop ES module build [#123](https://github.com/TehShrike/deepmerge/issues/123)\n\n# [2.2.1](https://github.com/TehShrike/deepmerge/releases/tag/v2.2.1)\n\n- bug: typescript export type was wrong [#121](https://github.com/TehShrike/deepmerge/pull/121)\n\n# [2.2.0](https://github.com/TehShrike/deepmerge/releases/tag/v2.2.0)\n\n- feature: added TypeScript typings [#119](https://github.com/TehShrike/deepmerge/pull/119)\n\n# [2.1.1](https://github.com/TehShrike/deepmerge/releases/tag/v2.1.1)\n\n- documentation: Rename \"methods\" to \"api\", note ESM syntax [#103](https://github.com/TehShrike/deepmerge/pull/103)\n- documentation: Fix grammar [#107](https://github.com/TehShrike/deepmerge/pull/107)\n- documentation: Restructure headers for clarity + some wording tweaks [108](https://github.com/TehShrike/deepmerge/pull/108) + [109](https://github.com/TehShrike/deepmerge/pull/109)\n\n\n# [2.1.0](https://github.com/TehShrike/deepmerge/releases/tag/v2.1.0)\n\n- feature: Support a custom `isMergeableObject` function [#96](https://github.com/TehShrike/deepmerge/pull/96)\n- documentation: note a Webpack bug that some users might need to work around [#100](https://github.com/TehShrike/deepmerge/pull/100)\n\n# [2.0.1](https://github.com/TehShrike/deepmerge/releases/tag/v2.0.1)\n\n- documentation: fix the old array merge algorithm in the readme.  [#84](https://github.com/TehShrike/deepmerge/pull/84)\n\n# [2.0.0](https://github.com/TehShrike/deepmerge/releases/tag/v2.0.0)\n\n- breaking: the array merge algorithm has changed from a complicated thing to `target.concat(source).map(element => cloneUnlessOtherwiseSpecified(element, optionsArgument))`\n- breaking: The `clone` option now defaults to `true`\n- feature: `merge.all` now accepts an array of any size, even 0 or 1 elements\n\nSee [pull request 77](https://github.com/TehShrike/deepmerge/pull/77).\n\n# [1.5.2](https://github.com/TehShrike/deepmerge/releases/tag/v1.5.2)\n\n- fix: no longer attempts to merge React elements [#76](https://github.com/TehShrike/deepmerge/issues/76)\n\n# [1.5.1](https://github.com/TehShrike/deepmerge/releases/tag/v1.5.1)\n\n- bower support: officially dropping bower support.  If you use bower, please depend on the [unpkg distribution](https://unpkg.com/deepmerge/dist/umd.js).  See [#63](https://github.com/TehShrike/deepmerge/issues/63)\n\n# [1.5.0](https://github.com/TehShrike/deepmerge/releases/tag/v1.5.0)\n\n- bug fix: merging objects into arrays was allowed, and doesn't make any sense. [#65](https://github.com/TehShrike/deepmerge/issues/65) published as a feature release instead of a patch because it is a decent behavior change.\n\n# [1.4.4](https://github.com/TehShrike/deepmerge/releases/tag/v1.4.4)\n\n- bower support: updated `main` in bower.json\n\n# [1.4.3](https://github.com/TehShrike/deepmerge/releases/tag/v1.4.3)\n\n- bower support: inline is-mergeable-object in a new CommonJS build, so that people using both bower and CommonJS can bundle the library [0b34e6](https://github.com/TehShrike/deepmerge/commit/0b34e6e95f989f2fc8091d25f0d291c08f3d2d24)\n\n# [1.4.2](https://github.com/TehShrike/deepmerge/releases/tag/v1.4.2)\n\n- performance: bump is-mergeable-object dependency version for a slight performance improvement [5906c7](https://github.com/TehShrike/deepmerge/commit/5906c765d691d48e83d76efbb0d4b9ca150dc12c)\n\n# [1.4.1](https://github.com/TehShrike/deepmerge/releases/tag/v1.4.1)\n\n- documentation: fix unpkg link [acc45b](https://github.com/TehShrike/deepmerge/commit/acc45be85519c1df906a72ecb24764b622d18d47)\n\n# [1.4.0](https://github.com/TehShrike/deepmerge/releases/tag/v1.4.0)\n\n- api: instead of only exporting a UMD module, expose a UMD module with `pkg.main`, a CJS module with `pkg.browser`, and an ES module with `pkg.module` [#62](https://github.com/TehShrike/deepmerge/pull/62)\n\n# [1.3.2](https://github.com/TehShrike/deepmerge/releases/tag/v1.3.2)\n\n- documentation: note the minified/gzipped file sizes [56](https://github.com/TehShrike/deepmerge/pull/56)\n- documentation: make data structures more readable in merge example: pull request [57](https://github.com/TehShrike/deepmerge/pull/57)\n\n# [1.3.1](https://github.com/TehShrike/deepmerge/releases/tag/v1.3.1)\n\n- documentation: clarify and test some array merging documentation: pull request [51](https://github.com/TehShrike/deepmerge/pull/51)\n\n# [1.3.0](https://github.com/TehShrike/deepmerge/releases/tag/v1.3.0)\n\n- feature: `merge.all`, a merge function that merges any number of objects: pull request [50](https://github.com/TehShrike/deepmerge/pull/50)\n\n# [1.2.0](https://github.com/TehShrike/deepmerge/releases/tag/v1.2.0)\n\n- fix: an error that would be thrown when an array would be merged onto a truthy non-array value: pull request [46](https://github.com/TehShrike/deepmerge/pull/46)\n- feature: the ability to clone: Issue [28](https://github.com/TehShrike/deepmerge/issues/28), pull requests [44](https://github.com/TehShrike/deepmerge/pull/44) and [48](https://github.com/TehShrike/deepmerge/pull/48)\n- maintenance: added tests + travis to `.npmignore`: pull request [47](https://github.com/TehShrike/deepmerge/pull/47)\n\n# [1.1.1](https://github.com/TehShrike/deepmerge/releases/tag/v1.1.1)\n\n- fix an issue where an error was thrown when merging an array onto a non-array: [Pull request 46](https://github.com/TehShrike/deepmerge/pull/46)\n\n# [1.1.0](https://github.com/TehShrike/deepmerge/releases/tag/v1.1.0)\n\n- allow consumers to specify their own array merging algorithm: [Pull request 37](https://github.com/TehShrike/deepmerge/pull/37)\n\n# [1.0.3](https://github.com/TehShrike/deepmerge/releases/tag/v1.0.3)\n\n- adding bower.json back: [Issue 38](https://github.com/TehShrike/deepmerge/pull/38)\n- updating keywords and Github links in package.json [bc3898e](https://github.com/TehShrike/deepmerge/commit/bc3898e587a56f74591328f40f656b0152c1d5eb)\n\n# [1.0.2](https://github.com/TehShrike/deepmerge/releases/tag/v1.0.2)\n\n- Updating the readme: dropping bower, testing that the example works: [7102fc](https://github.com/TehShrike/deepmerge/commit/7102fcc4ddec11e2d33205866f9f18df14e5aeb5)\n\n# [1.0.1](https://github.com/TehShrike/deepmerge/releases/tag/v1.0.1)\n\n- `null`, dates, and regular expressions are now properly merged in arrays: [Issue 18](https://github.com/TehShrike/deepmerge/pull/18), plus commit: [ef1c6b](https://github.com/TehShrike/deepmerge/commit/ef1c6bac8350ba12a24966f0bc7da02560827586)\n\n# 1.0.0\n\n- Should only be a patch change, because this module is READY. [Issue 15](https://github.com/TehShrike/deepmerge/issues/15)\n- Regular expressions are now treated like primitive values when merging: [Issue 30](https://github.com/TehShrike/deepmerge/pull/30)\n- Dates are now treated like primitives when merging: [Issue 31](https://github.com/TehShrike/deepmerge/issues/31)","../node_modules/deepmerge/changelog.md","a7f895f92149e006",{"html":1260,"metadata":1261},"\u003Ch1 id=\"431\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v4.3.1\">4.3.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>Fix type definition for arrayMerge options.  \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/239\">#239\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"430\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v4.3.0\">4.3.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>Avoid thrown errors if the target doesn’t have \u003Ccode>propertyIsEnumerable\u003C/code>.  \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/252\">#252\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"422\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v4.2.2\">4.2.2\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>\u003Ccode>isMergeableObject\u003C/code> is now only called if there are two values that could be merged.  \u003Ca href=\"https://github.com/TehShrike/deepmerge/commit/a34dd4d25bf5e250653540a2022bc832c7b00a19\">a34dd4d2\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"421\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v4.2.1\">4.2.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>Fix: falsey values can now be merged.  \u003Ca href=\"https://github.com/TehShrike/deepmerge/issues/170\">#170\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"420\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v4.2.0\">4.2.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>Properties are now only overwritten if they exist on the target object and are enumerable.  \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/164\">#164\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Cp>Technically this could probably be a patch release since “which properties get overwritten” wasn’t documented and accidentally overwriting a built-in function or some function up the property chain would almost certainly be undesirable, but it feels like a gray area, so here we are with a feature version bump.\u003C/p>\n\u003Ch1 id=\"412\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v4.1.2\">4.1.2\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>Rolled back #167 since \u003Ccode>Object.assign\u003C/code> breaks ES5 support.  \u003Ca href=\"https://github.com/TehShrike/deepmerge/commit/55067352a92c65a6c44a5165f3387720aae1e192\">55067352\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"411\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v4.1.1\">4.1.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>The \u003Ccode>options\u003C/code> argument is no longer mutated \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/167\">#167\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"410\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v4.1.0\">4.1.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>\u003Ccode>cloneUnlessOtherwiseSpecified\u003C/code> is now exposed to the \u003Ccode>arrayMerge\u003C/code> function \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/165\">#165\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"400\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v4.0.0\">4.0.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>The \u003Ccode>main\u003C/code> entry point in \u003Ccode>package.json\u003C/code> is now a CommonJS module instead of a UMD module \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/155\">#155\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"330\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v3.3.0\">3.3.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>Enumerable Symbol properties are now copied \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/151\">#151\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"321\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v3.2.1\">3.2.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>bumping dev dependency versions to try to shut up bogus security warnings from Github/npm \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/149\">#149\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"320\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v3.2.0\">3.2.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>feature: added the \u003Ca href=\"https://github.com/TehShrike/deepmerge#custommerge\">\u003Ccode>customMerge\u003C/code>\u003C/a> option \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/133\">#133\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"310\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v3.1.0\">3.1.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>typescript typing: make the \u003Ccode>all\u003C/code> function generic \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/129\">#129\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"300\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v3.0.0\">3.0.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>drop ES module build \u003Ca href=\"https://github.com/TehShrike/deepmerge/issues/123\">#123\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"221\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v2.2.1\">2.2.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>bug: typescript export type was wrong \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/121\">#121\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"220\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v2.2.0\">2.2.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>feature: added TypeScript typings \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/119\">#119\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"211\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v2.1.1\">2.1.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>documentation: Rename “methods” to “api”, note ESM syntax \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/103\">#103\u003C/a>\u003C/li>\n\u003Cli>documentation: Fix grammar \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/107\">#107\u003C/a>\u003C/li>\n\u003Cli>documentation: Restructure headers for clarity + some wording tweaks \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/108\">108\u003C/a> + \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/109\">109\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"210\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v2.1.0\">2.1.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>feature: Support a custom \u003Ccode>isMergeableObject\u003C/code> function \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/96\">#96\u003C/a>\u003C/li>\n\u003Cli>documentation: note a Webpack bug that some users might need to work around \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/100\">#100\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"201\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v2.0.1\">2.0.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>documentation: fix the old array merge algorithm in the readme.  \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/84\">#84\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"200\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v2.0.0\">2.0.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>breaking: the array merge algorithm has changed from a complicated thing to \u003Ccode>target.concat(source).map(element => cloneUnlessOtherwiseSpecified(element, optionsArgument))\u003C/code>\u003C/li>\n\u003Cli>breaking: The \u003Ccode>clone\u003C/code> option now defaults to \u003Ccode>true\u003C/code>\u003C/li>\n\u003Cli>feature: \u003Ccode>merge.all\u003C/code> now accepts an array of any size, even 0 or 1 elements\u003C/li>\n\u003C/ul>\n\u003Cp>See \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/77\">pull request 77\u003C/a>.\u003C/p>\n\u003Ch1 id=\"152\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.5.2\">1.5.2\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>fix: no longer attempts to merge React elements \u003Ca href=\"https://github.com/TehShrike/deepmerge/issues/76\">#76\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"151\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.5.1\">1.5.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>bower support: officially dropping bower support.  If you use bower, please depend on the \u003Ca href=\"https://unpkg.com/deepmerge/dist/umd.js\">unpkg distribution\u003C/a>.  See \u003Ca href=\"https://github.com/TehShrike/deepmerge/issues/63\">#63\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"150\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.5.0\">1.5.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>bug fix: merging objects into arrays was allowed, and doesn’t make any sense. \u003Ca href=\"https://github.com/TehShrike/deepmerge/issues/65\">#65\u003C/a> published as a feature release instead of a patch because it is a decent behavior change.\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"144\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.4.4\">1.4.4\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>bower support: updated \u003Ccode>main\u003C/code> in bower.json\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"143\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.4.3\">1.4.3\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>bower support: inline is-mergeable-object in a new CommonJS build, so that people using both bower and CommonJS can bundle the library \u003Ca href=\"https://github.com/TehShrike/deepmerge/commit/0b34e6e95f989f2fc8091d25f0d291c08f3d2d24\">0b34e6\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"142\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.4.2\">1.4.2\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>performance: bump is-mergeable-object dependency version for a slight performance improvement \u003Ca href=\"https://github.com/TehShrike/deepmerge/commit/5906c765d691d48e83d76efbb0d4b9ca150dc12c\">5906c7\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"141\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.4.1\">1.4.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>documentation: fix unpkg link \u003Ca href=\"https://github.com/TehShrike/deepmerge/commit/acc45be85519c1df906a72ecb24764b622d18d47\">acc45b\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"140\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.4.0\">1.4.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>api: instead of only exporting a UMD module, expose a UMD module with \u003Ccode>pkg.main\u003C/code>, a CJS module with \u003Ccode>pkg.browser\u003C/code>, and an ES module with \u003Ccode>pkg.module\u003C/code> \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/62\">#62\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"132\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.3.2\">1.3.2\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>documentation: note the minified/gzipped file sizes \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/56\">56\u003C/a>\u003C/li>\n\u003Cli>documentation: make data structures more readable in merge example: pull request \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/57\">57\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"131\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.3.1\">1.3.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>documentation: clarify and test some array merging documentation: pull request \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/51\">51\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"130\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.3.0\">1.3.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>feature: \u003Ccode>merge.all\u003C/code>, a merge function that merges any number of objects: pull request \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/50\">50\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"120\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.2.0\">1.2.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>fix: an error that would be thrown when an array would be merged onto a truthy non-array value: pull request \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/46\">46\u003C/a>\u003C/li>\n\u003Cli>feature: the ability to clone: Issue \u003Ca href=\"https://github.com/TehShrike/deepmerge/issues/28\">28\u003C/a>, pull requests \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/44\">44\u003C/a> and \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/48\">48\u003C/a>\u003C/li>\n\u003Cli>maintenance: added tests + travis to \u003Ccode>.npmignore\u003C/code>: pull request \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/47\">47\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"111\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.1.1\">1.1.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>fix an issue where an error was thrown when merging an array onto a non-array: \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/46\">Pull request 46\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"110\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.1.0\">1.1.0\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>allow consumers to specify their own array merging algorithm: \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/37\">Pull request 37\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"103\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.0.3\">1.0.3\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>adding bower.json back: \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/38\">Issue 38\u003C/a>\u003C/li>\n\u003Cli>updating keywords and Github links in package.json \u003Ca href=\"https://github.com/TehShrike/deepmerge/commit/bc3898e587a56f74591328f40f656b0152c1d5eb\">bc3898e\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"102\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.0.2\">1.0.2\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>Updating the readme: dropping bower, testing that the example works: \u003Ca href=\"https://github.com/TehShrike/deepmerge/commit/7102fcc4ddec11e2d33205866f9f18df14e5aeb5\">7102fc\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"101\">\u003Ca href=\"https://github.com/TehShrike/deepmerge/releases/tag/v1.0.1\">1.0.1\u003C/a>\u003C/h1>\n\u003Cul>\n\u003Cli>\u003Ccode>null\u003C/code>, dates, and regular expressions are now properly merged in arrays: \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/18\">Issue 18\u003C/a>, plus commit: \u003Ca href=\"https://github.com/TehShrike/deepmerge/commit/ef1c6bac8350ba12a24966f0bc7da02560827586\">ef1c6b\u003C/a>\u003C/li>\n\u003C/ul>\n\u003Ch1 id=\"100\">1.0.0\u003C/h1>\n\u003Cul>\n\u003Cli>Should only be a patch change, because this module is READY. \u003Ca href=\"https://github.com/TehShrike/deepmerge/issues/15\">Issue 15\u003C/a>\u003C/li>\n\u003Cli>Regular expressions are now treated like primitive values when merging: \u003Ca href=\"https://github.com/TehShrike/deepmerge/pull/30\">Issue 30\u003C/a>\u003C/li>\n\u003Cli>Dates are now treated like primitives when merging: \u003Ca href=\"https://github.com/TehShrike/deepmerge/issues/31\">Issue 31\u003C/a>\u003C/li>\n\u003C/ul>",{"headings":1262,"localImagePaths":1375,"remoteImagePaths":1376,"frontmatter":1377,"imagePaths":1378},[1263,1266,1269,1272,1275,1278,1281,1284,1287,1290,1293,1296,1299,1302,1305,1308,1311,1314,1317,1320,1323,1326,1329,1332,1335,1338,1341,1344,1347,1350,1353,1356,1359,1362,1365,1368,1371,1373],{"depth":1235,"slug":1264,"text":1265},"431","4.3.1",{"depth":1235,"slug":1267,"text":1268},"430","4.3.0",{"depth":1235,"slug":1270,"text":1271},"422","4.2.2",{"depth":1235,"slug":1273,"text":1274},"421","4.2.1",{"depth":1235,"slug":1276,"text":1277},"420","4.2.0",{"depth":1235,"slug":1279,"text":1280},"412","4.1.2",{"depth":1235,"slug":1282,"text":1283},"411","4.1.1",{"depth":1235,"slug":1285,"text":1286},"410","4.1.0",{"depth":1235,"slug":1288,"text":1289},"400","4.0.0",{"depth":1235,"slug":1291,"text":1292},"330","3.3.0",{"depth":1235,"slug":1294,"text":1295},"321","3.2.1",{"depth":1235,"slug":1297,"text":1298},"320","3.2.0",{"depth":1235,"slug":1300,"text":1301},"310","3.1.0",{"depth":1235,"slug":1303,"text":1304},"300","3.0.0",{"depth":1235,"slug":1306,"text":1307},"221","2.2.1",{"depth":1235,"slug":1309,"text":1310},"220","2.2.0",{"depth":1235,"slug":1312,"text":1313},"211","2.1.1",{"depth":1235,"slug":1315,"text":1316},"210","2.1.0",{"depth":1235,"slug":1318,"text":1319},"201","2.0.1",{"depth":1235,"slug":1321,"text":1322},"200","2.0.0",{"depth":1235,"slug":1324,"text":1325},"152","1.5.2",{"depth":1235,"slug":1327,"text":1328},"151","1.5.1",{"depth":1235,"slug":1330,"text":1331},"150","1.5.0",{"depth":1235,"slug":1333,"text":1334},"144","1.4.4",{"depth":1235,"slug":1336,"text":1337},"143","1.4.3",{"depth":1235,"slug":1339,"text":1340},"142","1.4.2",{"depth":1235,"slug":1342,"text":1343},"141","1.4.1",{"depth":1235,"slug":1345,"text":1346},"140","1.4.0",{"depth":1235,"slug":1348,"text":1349},"132","1.3.2",{"depth":1235,"slug":1351,"text":1352},"131","1.3.1",{"depth":1235,"slug":1354,"text":1355},"130","1.3.0",{"depth":1235,"slug":1357,"text":1358},"120","1.2.0",{"depth":1235,"slug":1360,"text":1361},"111","1.1.1",{"depth":1235,"slug":1363,"text":1364},"110","1.1.0",{"depth":1235,"slug":1366,"text":1367},"103","1.0.3",{"depth":1235,"slug":1369,"text":1370},"102","1.0.2",{"depth":1235,"slug":1372,"text":597},"101",{"depth":1235,"slug":1374,"text":287},"100",[],[],{},[],"domains/orders/services/inventoryservice/events/inventoryadjusted/versioned/001/changelog",{"id":1379,"data":1381,"body":1387,"filePath":1388,"digest":1389,"deferredRender":20},{"createdAt":1382,"badges":1383},["Date","2024-07-01T00:00:00.000Z"],[1384],{"content":1385,"backgroundColor":1386,"textColor":1386},"Breaking change","red","### Removed fields from schema, added new owners\n\n`Gender` property has been removed from the Schema of the event\n\nAlso added the [full stackers](/docs/teams/full-stack) team as owners of this event\n\n```diff lang=\"json\"\n  {\n    \"type\" : \"record\",\n    \"namespace\" : \"Tutorialspoint\",\n    \"name\" : \"Employee\",\n    \"fields\" : [\n      { \"name\" : \"Name\" , \"type\" : \"string\" },\n      { \"name\" : \"Age\" , \"type\" : \"int\" },\n-     { \"name\" : \"Gender\" , \"type\" : \"string\" },\n    ]\n  }\n```","../domains/Orders/services/InventoryService/events/InventoryAdjusted/versioned/0.0.1/changelog.mdx","162fc00e1c57d61f","domains/orders/services/inventoryservice/events/inventoryadjusted/changelog",{"id":1390,"data":1392,"body":1398,"filePath":1399,"digest":1400,"deferredRender":20},{"createdAt":1393,"badges":1394},["Date","2024-08-01T00:00:00.000Z"],[1395],{"content":1396,"backgroundColor":1397,"textColor":1397},"⭐️ JSON Schema","purple","### Added support for JSON Schema\n\nInventoryAdjusted uses Avro but now also supports JSON Draft 7.\n\n```json title=\"Employee JSON Draft\"\n// labeled-line-markers.jsx\n{\n  \"$schema\": \"http://json-schema.org/draft-07/schema#\",\n  \"type\": \"object\",\n  \"title\": \"Employee\",\n  \"properties\": {\n    \"Name\": {\n      \"type\": \"string\"\n    },\n    \"Age\": {\n      \"type\": \"integer\"\n    },\n    \"Town\": {\n      \"type\": \"string\"\n    }\n  },\n  \"required\": [\"Name\", \"Age\", \"Town\"]\n}\n\n```\n\nUsing it with our Kafka Cluster\n\n## 1. Create a new topic\n\n```sh\n# Create a topic named 'employee_topic'\nkafka-topics.sh --create --topic employee_topic --bootstrap-server localhost:9092 --partitions 1 --replication-factor 1\n```\n\n## Step 2: Prepare the JSON Message\n\nCreate a JSON file named `employee.json` with the following content:\n\n```json\n{\n  \"Name\": \"John Doe\",\n  \"Age\": 30,\n  \"Town\": \"Springfield\"\n}\n```\n\n## Step 3: Produce the Message to Kafka Topic\n\nUse the Kafka producer CLI to send the JSON message:\n\n```sh\ncat employee.json | kafka-console-producer.sh --topic employee_topic --bootstrap-server localhost:9092\n```\n\n## Step 4: Verify the Message (Optional)\n\n```sh\nkafka-console-consumer.sh --topic employee_topic --from-beginning --bootstrap-server localhost:9092\n```","../domains/Orders/services/InventoryService/events/InventoryAdjusted/changelog.mdx","bdb75d95ba7e41de","domains/orders/services/inventoryservice/events/inventoryadjusted/versioned/100/changelog",{"id":1401,"data":1403,"body":1408,"filePath":1409,"digest":1410,"deferredRender":20},{"createdAt":1404,"badges":1405},["Date","2024-07-11T00:00:00.000Z"],[1406],{"content":1407,"backgroundColor":550,"textColor":550},"New field","### Added new field to schema\n\nWe added the new town property to the schema for downstream consumers. \n\n```json ins={\"New: Added new Town property to schema:\":9-10}\n// labeled-line-markers.jsx\n{\n  \"type\" : \"record\",\n  \"namespace\" : \"Tutorialspoint\",\n  \"name\" : \"Employee\",\n  \"fields\" : [\n     { \"name\" : \"Name\" , \"type\" : \"string\" },\n     { \"name\" : \"Age\" , \"type\" : \"int\" },\n\n     { \"name\" : \"Town\" , \"type\" : \"string\" },\n  ]\n}\n```","../domains/Orders/services/InventoryService/events/InventoryAdjusted/versioned/1.0.0/changelog.mdx","1f3ea024bd6295c0","pages",["Map",1411,1413],{"id":1411,"data":1414,"body":1416,"filePath":1417,"digest":1418,"deferredRender":20},{"id":1415},"index","# **EventCatalog**\n\nWelcome to [EventCatalog](https://www.eventcatalog.dev/).\n\nThis open-source project is designed to help you and your teams bring discoverability and clarity to your event-driven architectures (EDA).\n\nTo get started you can read the following guides:\n\n* [Getting started with EventCatalog](https://eventcatalog.dev/docs/development/getting-started/introduction)  \n* [Creating domains](https://eventcatalog.dev/docs/development/guides/domains/adding-domains)  \n* [Creating services](https://eventcatalog.dev/docs/development/guides/services/adding-services)  \n* [Creating commands](https://eventcatalog.dev/docs/development/guides/messages/commands/introduction)  \n* [Creating events](https://eventcatalog.dev/docs/development/guides/messages/events/introduction)  \n* [Assigning owners to resources](https://eventcatalog.dev/docs/owners)  \n* [Using components in your pages (Schemas, OpenAPI, etc)](https://eventcatalog.dev/docs/development/components/using-components)  \n* [Deploying and hosting your EventCatalog](https://eventcatalog.dev/docs/development/deployment)\n\n### **Join the community**\n\nGot questions about EventCatalog? Feature requests or need support? [Join our community on Discord.](https://discord.gg/3rjaZMmrAm)\n\n### **Enterprise support**\n\nUsing EventCatalog and needs enterprise support? Work with us, find out what we offer on our [enterprise page](https://eventcatalog.dev/enterprise).","../pages/index.mdx","859c628ff365e5b2"]